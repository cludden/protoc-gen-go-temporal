/*! For license information please see 1df93b7f.bdb1e47a.js.LICENSE.txt */
(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[583,383],{5514:(e,t,r)=>{"use strict";r.r(t),r.d(t,{assets:()=>v,contentTitle:()=>w,default:()=>y,frontMatter:()=>h,metadata:()=>x,toc:()=>b});var n=r(4848),o=r(8453),s=r(1432),a=r(1470),i=r(9365),l=r(3595);const c="version: v1\ndeps:\n  - buf.build/cludden/protoc-gen-go-temporal\nbreaking:\n  use:\n    - FILE\nlint:\n  allow_comment_ignores: true\n  use:\n    - BASIC\n",u="version: v1\nmanaged:\n  enabled: true\n  go_package_prefix:\n    default: example/gen\n    except:\n      - buf.build/cludden/protoc-gen-go-temporal\nplugins:\n  - plugin: go\n    out: gen\n    opt: paths=source_relative\n  - plugin: go_temporal\n    out: gen\n    opt: paths=source_relative,cli-enabled=true,cli-categories=true,workflow-update-enabled=true,docs-out=./proto/README.md\n    strategy: all\n";var p=r(7429),g=r(3238),d=r(2397);let f=[{language:"sh",title:"build cli binary",output:"",content:"go build -o example cmd/example/main.go"},{language:"sh",title:"print cli usage details",output:"img/cli-usage.png",content:"example -h"},{language:"sh",title:"start a workflow",output:"img/cli-start-workflow.png",content:"example create-foo --name test -d"},{language:"sh",title:"send a signal",output:"",content:"example set-foo-progress -w create-foo/test --progress 5.7"},{language:"sh",title:"query workflow",output:"img/cli-query.png",content:"example get-foo-progress -w create-foo/test"},{language:"sh",title:"update workflow",output:"img/cli-update.png",content:"example update-foo-progress -w create-foo/test --progress 100"}],m='package xns\n\nimport (\n  "fmt"\n\n  examplev1 "github.com/cludden/protoc-gen-go-temporal/gen/example/v1"\n  "github.com/cludden/protoc-gen-go-temporal/gen/example/v1/examplev1xns"\n  "go.temporal.io/sdk/workflow"\n)\n\nfunc SomeWorkflow(ctx workflow.Context) error {\n  log := workflow.GetLogger(ctx)\n\n  run, err := examplev1xns.CreateFooAsync(ctx, &examplev1.CreateFooRequest{Name: w.Req.GetName()})\n\tif err != nil {\n\t\treturn fmt.Errorf("error initializing CreateFoo workflow: %w", err)\n\t}\n\n\tif err := run.SetFooProgress(ctx, &examplev1.SetFooProgressRequest{Progress: 5.7}); err != nil {\n\t\treturn fmt.Errorf("error signaling SetFooProgress: %w", err)\n\t}\n\tlog.Info("SetFooProgress", "progress", 5.7)\n\n\tprogress, err := run.GetFooProgress(ctx)\n\tif err != nil {\n\t\treturn fmt.Errorf("error querying GetFooProgress: %w", err)\n\t}\n\tlog.Info("GetFooProgress", "status", progress.GetStatus().String(), "progress", progress.GetProgress())\n\n\tupdate, err := run.UpdateFooProgressAsync(ctx, &examplev1.SetFooProgressRequest{Progress: 100})\n\tif err != nil {\n\t\treturn fmt.Errorf("error initializing UpdateFooProgress: %w", err)\n\t}\n\tprogress, err = update.Get(ctx)\n\tif err != nil {\n\t\treturn fmt.Errorf("error updating UpdateFooProgress: %w", err)\n\t}\n\tlog.Info("UpdateFooProgress", "status", progress.GetStatus().String(), "progress", progress.GetProgress())\n\n\tresp, err := run.Get(ctx)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n';const h={},w=void 0,x={id:"how-it-works",title:"how-it-works",description:"Annotate your protobuf services and methods with Temporal options.",source:"@site/docs/how-it-works.mdx",sourceDirName:".",slug:"/how-it-works",permalink:"/protoc-gen-go-temporal/docs/how-it-works",draft:!1,unlisted:!1,editUrl:"https://github.com/cludden/protoc-gen-go-temporal/tree/main/docs/docs/how-it-works.mdx",tags:[],version:"current",frontMatter:{}},v={},b=[];function k(e){const t={img:"img",p:"p",section:"section",...(0,o.R)(),...e.components};return(0,n.jsxs)(a.A,{children:[(0,n.jsxs)(i.A,{value:"annotate",label:"Annotate",children:[(0,n.jsx)(t.p,{children:"Annotate your protobuf services and methods with Temporal options."}),(0,n.jsx)(s.A,{language:"protobuf",title:"proto/example/v1/example.proto",children:l.A})]}),(0,n.jsxs)(i.A,{value:"generate",label:"Generate",children:[(0,n.jsx)(t.p,{children:"Generate Go code for implementing Temporal Clients, Workers, and CLI applications."}),(0,n.jsx)(s.A,{language:"yaml",title:"buf.yaml",children:c}),(0,n.jsx)(s.A,{language:"yaml",title:"buf.gen.yaml",children:u}),(0,n.jsx)(s.A,{language:"sh",children:"buf generate"})]}),(0,n.jsxs)(i.A,{value:"implement",label:"Implement",children:[(0,n.jsx)(t.p,{children:"Implement the required Workflow and Activity interfaces."}),(0,n.jsx)(s.A,{language:"go",title:"example.go",children:p.A})]}),(0,n.jsxs)(i.A,{value:"run",label:"Run",children:[(0,n.jsx)(t.p,{children:"Run your Temporal Worker using the generated helpers."}),(0,n.jsx)(s.A,{language:"go",title:"cmd/example/main.go",children:g.A}),(0,n.jsx)(s.A,{language:"sh",children:"go run cmd/example/main.go worker"})]}),(0,n.jsxs)(i.A,{value:"client",label:"Client",children:[(0,n.jsx)(t.p,{children:"Interact with your workers from any Go application using the generated Client."}),(0,n.jsx)(s.A,{language:"go",title:"cmd/client/main.go",children:d.A}),(0,n.jsx)(s.A,{language:"sh",children:"go run cmd/client/main.go worker"})]}),(0,n.jsxs)(i.A,{value:"cli",label:"CLI",children:[(0,n.jsx)(t.p,{children:"Or from your local machine using the generated Command Line Interface."}),f.map(((e,r)=>(0,n.jsxs)(t.section,{children:[(0,n.jsx)(s.A,{language:e.language,title:e.title,children:e.content}),""!=e.output&&(0,n.jsx)(t.img,{style:{"margin-bottom":"20px"},src:e.output})]})))]}),(0,n.jsxs)(i.A,{value:"xns",label:"XNS",children:[(0,n.jsx)(t.p,{children:"Or from other Temporal workflows in a different Namespace or Cluster."}),(0,n.jsx)(s.A,{language:"go",title:"xns.go",children:m})]})]})}function y(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(k,{...e})}):k(e)}},9365:(e,t,r)=>{"use strict";r.d(t,{A:()=>a});r(6540);var n=r(4164);const o={tabItem:"tabItem_Ymn6"};var s=r(4848);function a(e){let{children:t,hidden:r,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(o.tabItem,a),hidden:r,children:t})}},1470:(e,t,r)=>{"use strict";r.d(t,{A:()=>y});var n=r(6540),o=r(4164),s=r(3104),a=r(6347),i=r(205),l=r(7485),c=r(1682),u=r(9466);function p(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function g(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return p(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:o}}=e;return{value:t,label:r,attributes:n,default:o}}))}(r);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function d(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:r}=e;const o=(0,a.W6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,l.aZ)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(o.location.search);t.set(s,e),o.replace({...o.location,search:t.toString()})}),[s,o])]}function m(e){const{defaultValue:t,queryString:r=!1,groupId:o}=e,s=g(e),[a,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[c,p]=f({queryString:r,groupId:o}),[m,h]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,s]=(0,u.Dv)(r);return[o,(0,n.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:o}),w=(()=>{const e=c??m;return d({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{w&&l(w)}),[w]);return{selectedValue:a,selectValue:(0,n.useCallback)((e=>{if(!d({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),h(e)}),[p,h,s]),tabValues:s}}var h=r(2303);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=r(4848);function v(e){let{className:t,block:r,selectedValue:n,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const t=e.currentTarget,r=l.indexOf(t),o=i[r].value;o!==n&&(c(t),a(o))},p=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;t=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;t=l[r]??l[l.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":r},t),children:i.map((e=>{let{value:t,label:r,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>l.push(e),onKeyDown:p,onClick:u,...s,className:(0,o.A)("tabs__item",w.tabItem,s?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function b(e){let{lazy:t,children:r,selectedValue:o}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===o));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function k(e){const t=m(e);return(0,x.jsxs)("div",{className:(0,o.A)("tabs-container",w.tabList),children:[(0,x.jsx)(v,{...e,...t}),(0,x.jsx)(b,{...e,...t})]})}function y(e){const t=(0,h.A)();return(0,x.jsx)(k,{...e,children:p(e.children)},String(t))}},1001:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>x});var n=r(4164),o=r(6942),s=r.n(o),a=r(8774),i=r(4586),l=r(781);const c={features:"features_t9lD",featureSvg:"featureSvg_GfXr"};var u=r(4848),p=r(8453);r(1432);function g(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,p.R)(),...e.components};return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(t.h2,{id:"about",children:"About"}),"\n",(0,u.jsx)(t.p,{children:"A protoc plugin for generating typed Temporal clients and workers in Go from protobuf schemas. This plugin allows:"}),"\n",(0,u.jsxs)(t.ul,{children:["\n",(0,u.jsx)(t.li,{children:"workflow authors to configure sensible defaults and guardrails"}),"\n",(0,u.jsx)(t.li,{children:"simplifies the implementation and testing of Temporal workers"}),"\n",(0,u.jsx)(t.li,{children:"and streamlines integration by providing typed client SDKs and a generated CLI application"}),"\n"]}),"\n",(0,u.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/fqKDWZDj-c0?si=3Wgvj_nP2BnSVcum&start=912",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowFullScreen:!0}),"\n",(0,u.jsx)("br",{}),"\n",(0,u.jsx)("br",{}),"\n",(0,u.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,u.jsxs)(t.p,{children:["Generated ",(0,u.jsx)(t.strong,{children:"Client"})," with:"]}),"\n",(0,u.jsxs)(t.ul,{children:["\n",(0,u.jsx)(t.li,{children:"methods for executing workflows, queries, signals, and updates"}),"\n",(0,u.jsx)(t.li,{children:"methods for cancelling or terminating workflows"}),"\n",(0,u.jsxs)(t.li,{children:["default ",(0,u.jsx)(t.code,{children:"client.StartWorkflowOptions"})," and ",(0,u.jsx)(t.code,{children:"client.UpdateWorkflowWithOptionsRequest"})]}),"\n",(0,u.jsxs)(t.li,{children:["dynamic workflow ids, update ids, and search attributes via ",(0,u.jsx)(t.a,{href:"#bloblang-expressions",children:"Bloblang expressions"})]}),"\n",(0,u.jsx)(t.li,{children:"default timeouts, id reuse policies, retry policies, wait policies"}),"\n"]}),"\n",(0,u.jsxs)(t.p,{children:["Generated ",(0,u.jsx)(t.strong,{children:"Worker"})," resources with:"]}),"\n",(0,u.jsxs)(t.ul,{children:["\n",(0,u.jsx)(t.li,{children:"functions for calling activities and local activities from workflows"}),"\n",(0,u.jsx)(t.li,{children:"functions for executing child workflows and signalling external workflows"}),"\n",(0,u.jsxs)(t.li,{children:["default ",(0,u.jsx)(t.code,{children:"workflow.ActivityOptions"}),", ",(0,u.jsx)(t.code,{children:"workflow.ChildWorkflowOptions"})]}),"\n",(0,u.jsx)(t.li,{children:"default timeouts, parent cose policies, retry policies"}),"\n"]}),"\n",(0,u.jsxs)(t.p,{children:["Optional ",(0,u.jsx)(t.strong,{children:"CLI"})," with:"]}),"\n",(0,u.jsxs)(t.ul,{children:["\n",(0,u.jsx)(t.li,{children:"commands for executing workflows, synchronously or asynchronously"}),"\n",(0,u.jsx)(t.li,{children:"commands for starting workflows with signals, synchronously or asynchronously"}),"\n",(0,u.jsx)(t.li,{children:"commands for querying existing workflows"}),"\n",(0,u.jsx)(t.li,{children:"commands for sending signals to existing workflows"}),"\n",(0,u.jsx)(t.li,{children:"typed flags for conventiently specifying workflow, query, and signal inputs"}),"\n"]}),"\n",(0,u.jsxs)(t.p,{children:["Generated ",(0,u.jsx)(t.a,{href:"/docs/guides/xns",children:"Cross-Namespace (XNS)"})," helpers: ",(0,u.jsx)(t.strong,{children:"[Experimental]"})]}),"\n",(0,u.jsxs)(t.ul,{children:["\n",(0,u.jsx)(t.li,{children:"with support for invoking a service's workflows, queries, signals, and updates from workflows in a different temporal namespace"}),"\n"]}),"\n",(0,u.jsxs)(t.p,{children:["Generated ",(0,u.jsx)(t.a,{href:"/docs/guides/codec-server",children:"Remote Codec Server"})," helpers"]}),"\n",(0,u.jsxs)(t.p,{children:["Generated ",(0,u.jsx)(t.a,{href:"/docs/guides/documentation",children:"Markdown Documentation"})]}),"\n",(0,u.jsx)(t.h2,{id:"inspiration",children:"Inspiration"}),"\n",(0,u.jsxs)(t.p,{children:["This project was inspired by ",(0,u.jsx)(t.a,{href:"https://github.com/cretz/",children:"Chad Retz's"})," awesome ",(0,u.jsx)(t.a,{href:"https://github.com/cretz/temporal-sdk-go-advanced",children:"github.com/cretz/temporal-sdk-go-advanced"})," and ",(0,u.jsx)(t.a,{href:"https://github.com/jlegrone/",children:"Jacob LeGrone's"})," excellent Replay talk on ",(0,u.jsx)(t.a,{href:"https://youtu.be/LxgkAoTSI8Q?si=ZGwwbfbMz48MkPhj&t=681",children:"Temporal @ Datadog"})]}),"\n",(0,u.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/LxgkAoTSI8Q?si=L3O5it48sy38dsx7&start=681",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowFullScreen:!0})]})}function d(e={}){const{wrapper:t}={...(0,p.R)(),...e.components};return t?(0,u.jsx)(t,{...e,children:(0,u.jsx)(g,{...e})}):g(e)}var f=r(5514);function m(){return(0,u.jsx)("section",{className:c.features,children:(0,u.jsx)("div",{className:"container",children:(0,u.jsxs)("div",{className:"row",children:[(0,u.jsx)("div",{className:"col col--6",children:(0,u.jsx)(d,{})}),(0,u.jsx)("div",{className:"col col--6",children:(0,u.jsx)(f.default,{})})]})})})}const h={heroBanner:"heroBanner_qdFl",buttons:"buttons_AeoN"};function w(){const{siteConfig:e}=(0,i.A)();return(0,u.jsx)("header",{className:(0,n.A)("hero hero--primary",h.heroBanner),children:(0,u.jsx)("div",{className:"container",children:(0,u.jsxs)("div",{className:"row",children:[(0,u.jsxs)("div",{className:s()("col col--6"),children:[(0,u.jsx)("h1",{className:"hero__title",children:e.title}),(0,u.jsx)("p",{className:"hero__subtitle",children:e.tagline}),(0,u.jsx)("div",{className:h.buttons,children:(0,u.jsx)(a.A,{className:"button button--secondary button--lg",to:"/docs/install",children:"Get Started"})})]}),(0,u.jsx)("div",{className:s()("col col--6"),children:(0,u.jsx)("img",{width:"300",className:h.heroImg,src:"img/logo.png"})})]})})})}function x(){const{siteConfig:e}=(0,i.A)();return(0,u.jsxs)(l.A,{title:`Hello from ${e.title}`,description:"Description will go into a meta tag in <head />",children:[(0,u.jsx)(w,{}),(0,u.jsx)("main",{children:(0,u.jsx)(m,{})})]})}},2397:(e,t,r)=>{"use strict";r.d(t,{A:()=>n});const n='package main\n\nimport (\n\t"context"\n\t"log"\n\n\texamplev1 "github.com/cludden/protoc-gen-go-temporal/gen/example/v1"\n\t"go.temporal.io/sdk/client"\n)\n\nfunc main() {\n\t// initialize service client with sdk client\n\tc, _ := client.Dial(client.Options{})\n\tclient, ctx := examplev1.NewExampleClient(c), context.Background()\n\n\t// execute a workflow asynchronously\n\trun, _ := client.CreateFooAsync(ctx, &examplev1.CreateFooRequest{Name: "test"})\n\tlog.Printf("started workflow: workflow_id=%s, run_id=%s\\n", run.ID(), run.RunID())\n\n\t// send a signal to the workflow\n\tlog.Println("signalling progress")\n\t_ = run.SetFooProgress(ctx, &examplev1.SetFooProgressRequest{Progress: 5.7})\n\n\t// query the workflow\n\tprogress, _ := run.GetFooProgress(ctx)\n\tlog.Printf("queried progress: %s\\n", progress.String())\n\n\t// update the workflow\n\tupdate, _ := run.UpdateFooProgress(ctx, &examplev1.SetFooProgressRequest{Progress: 100})\n\tlog.Printf("updated progress: %s\\n", update.String())\n\n\t// block on workflow completion\n\tresp, _ := run.Get(ctx)\n\tlog.Printf("workflow completed: %s\\n", resp.String())\n}\n'},3238:(e,t,r)=>{"use strict";r.d(t,{A:()=>n});const n='package main\n\nimport (\n\t"log"\n\t"log/slog"\n\t"os"\n\n\t"github.com/cludden/protoc-gen-go-temporal/examples/example"\n\texamplev1 "github.com/cludden/protoc-gen-go-temporal/gen/example/v1"\n\t"github.com/urfave/cli/v2"\n\t"go.temporal.io/sdk/client"\n\tlogsdk "go.temporal.io/sdk/log"\n\t"go.temporal.io/sdk/worker"\n)\n\nfunc main() {\n\t// initialize the generated cli application\n\tapp, err := examplev1.NewExampleCli(\n\t\texamplev1.NewExampleCliOptions().\n\t\t\tWithClient(func(cmd *cli.Context) (client.Client, error) {\n\t\t\t\treturn client.Dial(client.Options{\n\t\t\t\t\tLogger: logsdk.NewStructuredLogger(slog.New(slog.NewTextHandler(os.Stdout, nil))),\n\t\t\t\t})\n\t\t\t}).\n\t\t\tWithWorker(func(cmd *cli.Context, c client.Client) (worker.Worker, error) {\n\t\t\t\t// register activities and workflows using generated helpers\n\t\t\t\tw := worker.New(c, examplev1.ExampleTaskQueue, worker.Options{})\n\t\t\t\texamplev1.RegisterExampleActivities(w, &example.Activities{})\n\t\t\t\texamplev1.RegisterExampleWorkflows(w, &example.Workflows{})\n\t\t\t\treturn w, nil\n\t\t\t}),\n\t)\n\tif err != nil {\n\t\tlog.Fatalf("error initializing example cli: %v", err)\n\t}\n\n\t// run cli\n\tif err := app.Run(os.Args); err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n'},7429:(e,t,r)=>{"use strict";r.d(t,{A:()=>n});const n='package example\n\nimport (\n\t"context"\n\t"fmt"\n\n\texamplev1 "github.com/cludden/protoc-gen-go-temporal/gen/example/v1"\n\t"go.temporal.io/sdk/activity"\n\t"go.temporal.io/sdk/log"\n\t"go.temporal.io/sdk/workflow"\n)\n\ntype (\n\t// Workflows manages shared state for workflow constructors and is used to\n\t// register workflows with a worker\n\tWorkflows struct{}\n\n\t// Activities manages shared state for activities and is used to register\n\t// activities with a worker\n\tActivities struct{}\n\n\t// CreateFooWorkflow manages workflow state for a CreateFoo workflow\n\tCreateFooWorkflow struct {\n\t\t// it embeds the generated workflow Input type that contains the workflow\n\t\t// input and signal helpers\n\t\t*examplev1.CreateFooWorkflowInput\n\n\t\tlog      log.Logger\n\t\tprogress float32\n\t\tstatus   examplev1.Foo_Status\n\t}\n)\n\n// CreateFoo initializes a new examplev1.CreateFooWorkflow value\nfunc (w *Workflows) CreateFoo(ctx workflow.Context, input *examplev1.CreateFooWorkflowInput) (examplev1.CreateFooWorkflow, error) {\n\treturn &CreateFooWorkflow{\n\t\tCreateFooWorkflowInput: input,\n\t\tlog:                    workflow.GetLogger(ctx),\n\t\tstatus:                 examplev1.Foo_FOO_STATUS_CREATING,\n\t}, nil\n}\n\n// Execute defines the entrypoint to a example.v1.Example.CreateFoo workflow\nfunc (wf *CreateFooWorkflow) Execute(ctx workflow.Context) (*examplev1.CreateFooResponse, error) {\n\t// listen for signals using generated signal provided by workflow input\n\tworkflow.Go(ctx, func(ctx workflow.Context) {\n\t\tfor {\n\t\t\tsignal, _ := wf.SetFooProgress.Receive(ctx)\n\t\t\twf.UpdateFooProgress(ctx, signal)\n\t\t}\n\t})\n\n\t// execute Notify activity using generated helper\n\tif err := examplev1.Notify(ctx, &examplev1.NotifyRequest{\n\t\tMessage: fmt.Sprintf("creating foo resource (%s)", wf.Req.GetName()),\n\t}); err != nil {\n\t\treturn nil, fmt.Errorf("error sending notification: %w", err)\n\t}\n\n\t// block until progress has reached 100 via signals and/or updates\n\tif err := workflow.Await(ctx, func() bool {\n\t\treturn wf.status == examplev1.Foo_FOO_STATUS_READY\n\t}); err != nil {\n\t\treturn nil, fmt.Errorf("error awaiting ready status: %w", err)\n\t}\n\n\treturn &examplev1.CreateFooResponse{\n\t\tFoo: &examplev1.Foo{\n\t\t\tName:   wf.Req.GetName(),\n\t\t\tStatus: wf.status,\n\t\t},\n\t}, nil\n}\n\n// GetFooProgress defines the handler for a GetFooProgress query\nfunc (wf *CreateFooWorkflow) GetFooProgress() (*examplev1.GetFooProgressResponse, error) {\n\treturn &examplev1.GetFooProgressResponse{Progress: wf.progress, Status: wf.status}, nil\n}\n\n// UpdateFooProgress defines the handler for an UpdateFooProgress update\nfunc (wf *CreateFooWorkflow) UpdateFooProgress(ctx workflow.Context, req *examplev1.SetFooProgressRequest) (*examplev1.GetFooProgressResponse, error) {\n\twf.progress = req.GetProgress()\n\tswitch {\n\tcase wf.progress < 0:\n\t\twf.progress, wf.status = 0, examplev1.Foo_FOO_STATUS_CREATING\n\tcase wf.progress < 100:\n\t\twf.status = examplev1.Foo_FOO_STATUS_CREATING\n\tcase wf.progress >= 100:\n\t\twf.progress, wf.status = 100, examplev1.Foo_FOO_STATUS_READY\n\t}\n\treturn &examplev1.GetFooProgressResponse{Progress: wf.progress, Status: wf.status}, nil\n}\n\n// Notify defines the implementation for a Notify activity\nfunc (a *Activities) Notify(ctx context.Context, req *examplev1.NotifyRequest) error {\n\tactivity.GetLogger(ctx).Info("notification", "message", req.GetMessage())\n\treturn nil\n}\n'},3595:(e,t,r)=>{"use strict";r.d(t,{A:()=>n});const n='syntax="proto3";\n\npackage example.v1;\n\nimport "google/protobuf/empty.proto";\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  option (temporal.v1.service) = {\n    task_queue: "example-v1"\n  };\n\n  // CreateFoo creates a new foo operation\n  rpc CreateFoo(CreateFooRequest) returns (CreateFooResponse) {\n    option (temporal.v1.workflow) = {\n      execution_timeout: { seconds: 3600 }\n      id: \'create-foo/${! name.slug() }\'\n      id_reuse_policy: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE\n      query: { ref: "GetFooProgress" }\n      signal: { ref: "SetFooProgress", start: true }\n      update: { ref: "UpdateFooProgress" }\n    };\n  }\n\n  // GetFooProgress returns the status of a CreateFoo operation\n  rpc GetFooProgress(google.protobuf.Empty) returns (GetFooProgressResponse) {\n    option (temporal.v1.query) = {};\n  }\n\n  // Notify sends a notification\n  rpc Notify(NotifyRequest) returns (google.protobuf.Empty) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 30 }\n      retry_policy: {\n        max_attempts: 3\n      }\n    };\n  }\n\n  // SetFooProgress sets the current status of a CreateFoo operation\n  rpc SetFooProgress(SetFooProgressRequest) returns (google.protobuf.Empty) {\n    option (temporal.v1.signal) = {};\n  }\n\n  // UpdateFooProgress sets the current status of a CreateFoo operation\n  rpc UpdateFooProgress(SetFooProgressRequest) returns (GetFooProgressResponse) {\n    option (temporal.v1.update) = {\n      id: \'update-progress/${! progress.string() }\'\n    };\n  }\n}\n\n// CreateFooRequest describes the input to a CreateFoo workflow\nmessage CreateFooRequest {\n  // unique foo name\n  string name = 1;\n}\n\n// SampleWorkflowWithMutexResponse describes the output from a CreateFoo workflow\nmessage CreateFooResponse {\n  Foo foo = 1; \n}\n\n// Foo describes an illustrative foo resource\nmessage Foo {\n  string name = 1;\n  Status status = 2;\n\n  enum Status {\n    FOO_STATUS_UNSPECIFIED = 0;\n    FOO_STATUS_READY = 1;\n    FOO_STATUS_CREATING = 2;\n  }\n}\n\n// GetFooProgressResponse describes the output from a GetFooProgress query\nmessage GetFooProgressResponse {\n  float progress = 1;\n  Foo.Status status = 2;\n}\n\n// NotifyRequest describes the input to a Notify activity\nmessage NotifyRequest {\n  string message = 1;\n}\n\n// SetFooProgressRequest describes the input to a SetFooProgress signal\nmessage SetFooProgressRequest {\n  // value of current workflow progress\n  float progress = 1;\n}\n'},6942:(e,t)=>{var r;!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var e="",t=0;t<arguments.length;t++){var r=arguments[t];r&&(e=a(e,s(r)))}return e}function s(e){if("string"==typeof e||"number"==typeof e)return e;if("object"!=typeof e)return"";if(Array.isArray(e))return o.apply(null,e);if(e.toString!==Object.prototype.toString&&!e.toString.toString().includes("[native code]"))return e.toString();var t="";for(var r in e)n.call(e,r)&&e[r]&&(t=a(t,r));return t}function a(e,t){return t?e?e+" "+t:e+t:e}e.exports?(o.default=o,e.exports=o):void 0===(r=function(){return o}.apply(t,[]))||(e.exports=r)}()}}]);