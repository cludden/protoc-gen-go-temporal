"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[857],{4561:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var r=n(4848),o=n(8453),a=n(1470),s=n(9365);const l={},i="Getting Started",c={id:"getting-started",title:"Getting Started",description:"Setup",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/protoc-gen-go-temporal/docs/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/cludden/protoc-gen-go-temporal/tree/main/docs/docs/getting-started.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Install",permalink:"/protoc-gen-go-temporal/docs/install"},next:{title:"Plugin",permalink:"/protoc-gen-go-temporal/docs/configuration/plugin"}},u={},d=[{value:"Setup",id:"setup",level:2},{value:"1. Create example project",id:"1-create-example-project",level:3},{value:"2. Create <code>buf.yaml</code>",id:"2-create-bufyaml",level:3},{value:"3. Create <code>buf.gen.yaml</code>",id:"3-create-bufgenyaml",level:3},{value:"4. Create <code>buf.work.yaml</code>",id:"4-create-bufworkyaml",level:3},{value:"Generate",id:"generate",level:2},{value:"5. Define schema",id:"5-define-schema",level:3},{value:"6. Generate go code",id:"6-generate-go-code",level:3},{value:"Implement",id:"implement",level:2},{value:"7. Implement worker",id:"7-implement-worker",level:3},{value:"Run",id:"run",level:2},{value:"8. Start Temporal",id:"8-start-temporal",level:3},{value:"9. Start worker",id:"9-start-worker",level:3},{value:"10. Start a workflow",id:"10-start-a-workflow",level:3}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,r.jsx)(t.h3,{id:"1-create-example-project",children:"1. Create example project"}),"\n",(0,r.jsx)(t.p,{children:"Create a new project and initialize go and buf modules"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:'mkdir -p example/proto\ncd example\ngo mod init example\ngo get -u "github.com/cludden/protoc-gen-go-temporal@$(curl --silent https://api.github.com/repos/cludden/protoc-gen-go-temporal/releases/latest|jq -r .tag_name)"\ngo mod tidy\ncd proto\nbuf mod init\n'})}),"\n",(0,r.jsxs)(t.h3,{id:"2-create-bufyaml",children:["2. Create ",(0,r.jsx)(t.code,{children:"buf.yaml"})]}),"\n",(0,r.jsxs)(t.p,{children:["Configure buf module and add ",(0,r.jsx)(t.code,{children:"buf.build/cludden/protoc-gen-go-temporal"})," as a proto dependency to ",(0,r.jsx)(t.code,{children:"proto/buf.yaml"})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",metastring:'title="proto/buf.yaml"',children:"version: v1\ndeps:\n  - buf.build/cludden/protoc-gen-go-temporal\nbreaking:\n  use:\n    - FILE\nlint:\n  allow_comment_ignores: true\n  use:\n    - BASIC\n"})}),"\n",(0,r.jsxs)(t.h3,{id:"3-create-bufgenyaml",children:["3. Create ",(0,r.jsx)(t.code,{children:"buf.gen.yaml"})]}),"\n",(0,r.jsx)(t.p,{children:"Configure buf code generation"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",metastring:'title="buf.gen.yaml"',children:"version: v1\nmanaged:\n  enabled: true\n  go_package_prefix:\n    default: example/gen\n    except:\n      - buf.build/cludden/protoc-gen-go-temporal\nplugins:\n  - plugin: go\n    out: gen\n    opt: paths=source_relative\n  - plugin: go_temporal\n    out: gen\n    opt: paths=source_relative,cli-enabled=true,cli-categories=true,workflow-update-enabled=true,docs-out=./proto/README.md\n    strategy: all\n"})}),"\n",(0,r.jsxs)(t.h3,{id:"4-create-bufworkyaml",children:["4. Create ",(0,r.jsx)(t.code,{children:"buf.work.yaml"})]}),"\n",(0,r.jsx)(t.p,{children:"Configure buf workspace"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",metastring:'title="buf.work.yaml"',children:"version: v1\ndirectories:\n  - proto\n"})}),"\n",(0,r.jsx)(t.h2,{id:"generate",children:"Generate"}),"\n",(0,r.jsx)(t.h3,{id:"5-define-schema",children:"5. Define schema"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-protobuf",metastring:'title="proto/example/v1/example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "google/protobuf/empty.proto";\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  option (temporal.v1.service) = {\n    task_queue: "example-v1"\n  };\n\n  // CreateFoo creates a new foo operation\n  rpc CreateFoo(CreateFooRequest) returns (CreateFooResponse) {\n    option (temporal.v1.workflow) = {\n      execution_timeout: { seconds: 3600 } // foos can take awhile to create\n      id_reuse_policy: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE\n      id: \'create-foo/${! name.slug() }\'\n      query: { ref: "GetFooProgress" }\n      signal: { ref: "SetFooProgress", start: true }\n      update: { ref: "UpdateFooProgress" }\n    };\n  }\n\n  // GetFooProgress returns the status of a CreateFoo operation\n  rpc GetFooProgress(google.protobuf.Empty) returns (GetFooProgressResponse) {\n    option (temporal.v1.query) = {};\n  }\n\n  // Notify sends a notification\n  rpc Notify(NotifyRequest) returns (google.protobuf.Empty) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 30 }\n      retry_policy: {\n        max_attempts: 3\n      }\n    };\n  }\n\n  // SetFooProgress sets the current status of a CreateFoo operation\n  rpc SetFooProgress(SetFooProgressRequest) returns (google.protobuf.Empty) {\n    option (temporal.v1.signal) = {};\n  }\n\n  // UpdateFooProgress sets the current status of a CreateFoo operation\n  rpc UpdateFooProgress(SetFooProgressRequest) returns (GetFooProgressResponse) {\n    option (temporal.v1.update) = {\n      id: \'update-progress/${! progress.string() }\',\n    };\n  }\n}\n\n// CreateFooRequest describes the input to a CreateFoo workflow\nmessage CreateFooRequest {\n  // unique foo name\n  string name = 1;\n}\n\n// SampleWorkflowWithMutexResponse describes the output from a CreateFoo workflow\nmessage CreateFooResponse {\n  Foo foo = 1; \n}\n\n// Foo describes an illustrative foo resource\nmessage Foo {\n  string name = 1;\n  Status status = 2;\n\n  enum Status {\n    FOO_STATUS_UNSPECIFIED = 0;\n    FOO_STATUS_READY = 1;\n    FOO_STATUS_CREATING = 2;\n  }\n}\n\n// GetFooProgressResponse describes the output from a GetFooProgress query\nmessage GetFooProgressResponse {\n  float progress = 1;\n  Foo.Status status = 2;\n}\n\n// NotifyRequest describes the input to a Notify activity\nmessage NotifyRequest {\n  string message = 1;\n}\n\n// SetFooProgressRequest describes the input to a SetFooProgress signal\nmessage SetFooProgressRequest {\n  // value of current workflow progress\n  float progress = 1;\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"6-generate-go-code",children:"6. Generate go code"}),"\n",(0,r.jsx)(t.p,{children:"Generate temporal worker, client, and cli types, methods, interfaces, and functions"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"buf mod update\ncd ..\nbuf generate\n"})}),"\n",(0,r.jsx)(t.h2,{id:"implement",children:"Implement"}),"\n",(0,r.jsx)(t.h3,{id:"7-implement-worker",children:"7. Implement worker"}),"\n",(0,r.jsx)(t.p,{children:"Implement the required Workflow and Activity interfaces and create a new Temporal worker using the generated helpers"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n\t"context"\n\t"fmt"\n\t"log"\n\t"os"\n\n\texamplev1 "example/gen/example/v1"\n\n\t"github.com/urfave/cli/v2"\n\t"go.temporal.io/sdk/activity"\n\t"go.temporal.io/sdk/client"\n\tsdklog "go.temporal.io/sdk/log"\n\t"go.temporal.io/sdk/worker"\n\t"go.temporal.io/sdk/workflow"\n)\n\ntype (\n\t// Workflows manages shared state for workflow constructors and is used to\n\t// register workflows with a worker\n\tWorkflows struct{}\n\n\t// Activities manages shared state for activities and is used to register\n\t// activities with a worker\n\tActivities struct{}\n\n\t// CreateFooWorkflow manages workflow state for a CreateFoo workflow\n\tCreateFooWorkflow struct {\n\t\t// it embeds the generated workflow Input type that contains the workflow\n\t\t// input and signal helpers\n\t\t*examplev1.CreateFooWorkflowInput\n\n\t\tlog      sdklog.Logger\n\t\tprogress float32\n\t\tstatus   examplev1.Foo_Status\n\t}\n)\n\n// CreateFoo implements a CreateFoo workflow constructor on the shared Workflows struct\n// that initializes a new CreateFooWorkflow for each execution\nfunc (w *Workflows) CreateFoo(ctx workflow.Context, input *examplev1.CreateFooWorkflowInput) (examplev1.CreateFooWorkflow, error) {\n\treturn &CreateFooWorkflow{\n\t\tCreateFooWorkflowInput: input,\n\t\tlog:                    workflow.GetLogger(ctx),\n\t\tstatus:                 examplev1.Foo_FOO_STATUS_CREATING,\n\t}, nil\n}\n\n// Execute defines the entrypoint to a CreateFooWorkflow\nfunc (wf *CreateFooWorkflow) Execute(ctx workflow.Context) (*examplev1.CreateFooResponse, error) {\n\t// listen for signals using generated signal provided by workflow input\n\tworkflow.Go(ctx, func(ctx workflow.Context) {\n\t\tfor {\n\t\t\tsignal, _ := wf.SetFooProgress.Receive(ctx)\n\t\t\twf.UpdateFooProgress(ctx, signal)\n\t\t}\n\t})\n\n\t// execute Notify activity using generated helper\n\tif err := examplev1.Notify(ctx, &examplev1.NotifyRequest{\n\t\tMessage: fmt.Sprintf("creating foo resource (%s)", wf.Req.GetName()),\n\t}); err != nil {\n\t\treturn nil, fmt.Errorf("error sending notification: %w", err)\n\t}\n\n\t// block until progress has reached 100 via signals and/or updates\n\tif err := workflow.Await(ctx, func() bool {\n\t\treturn wf.status == examplev1.Foo_FOO_STATUS_READY\n\t}); err != nil {\n\t\treturn nil, fmt.Errorf("error awaiting ready status: %w", err)\n\t}\n\n\treturn &examplev1.CreateFooResponse{\n\t\tFoo: &examplev1.Foo{\n\t\t\tName:   wf.Req.GetName(),\n\t\t\tStatus: wf.status,\n\t\t},\n\t}, nil\n}\n\n// GetFooProgress defines the handler for a GetFooProgress query\nfunc (wf *CreateFooWorkflow) GetFooProgress() (*examplev1.GetFooProgressResponse, error) {\n\treturn &examplev1.GetFooProgressResponse{Progress: wf.progress, Status: wf.status}, nil\n}\n\n// UpdateFooProgress defines the handler for an UpdateFooProgress update\nfunc (wf *CreateFooWorkflow) UpdateFooProgress(ctx workflow.Context, req *examplev1.SetFooProgressRequest) (*examplev1.GetFooProgressResponse, error) {\n\twf.progress = req.GetProgress()\n\tswitch {\n\tcase wf.progress < 0:\n\t\twf.progress, wf.status = 0, examplev1.Foo_FOO_STATUS_CREATING\n\tcase wf.progress < 100:\n\t\twf.status = examplev1.Foo_FOO_STATUS_CREATING\n\tcase wf.progress >= 100:\n\t\twf.progress, wf.status = 100, examplev1.Foo_FOO_STATUS_READY\n\t}\n\treturn &examplev1.GetFooProgressResponse{Progress: wf.progress, Status: wf.status}, nil\n}\n\n// Notify defines the implementation for a Notify activity\nfunc (a *Activities) Notify(ctx context.Context, req *examplev1.NotifyRequest) error {\n\tactivity.GetLogger(ctx).Info("notification", "message", req.GetMessage())\n\treturn nil\n}\n\nfunc main() {\n\t// initialize the generated cli application\n\tapp, err := examplev1.NewExampleCli(\n\t\texamplev1.NewExampleCliOptions().WithWorker(func(cmd *cli.Context, c client.Client) (worker.Worker, error) {\n\t\t\t// register activities and workflows using generated helpers\n\t\t\tw := worker.New(c, examplev1.ExampleTaskQueue, worker.Options{})\n\t\t\texamplev1.RegisterExampleActivities(w, &Activities{})\n\t\t\texamplev1.RegisterExampleWorkflows(w, &Workflows{})\n\t\t\treturn w, nil\n\t\t}),\n\t)\n\tif err != nil {\n\t\tlog.Fatalf("error initializing example cli: %v", err)\n\t}\n\n\t// run cli\n\tif err := app.Run(os.Args); err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"run",children:"Run"}),"\n",(0,r.jsx)(t.h3,{id:"8-start-temporal",children:"8. Start Temporal"}),"\n",(0,r.jsxs)(t.p,{children:["Start temporal and visit the UI at ",(0,r.jsx)(t.a,{href:"http://localhost:8233",children:"http://localhost:8233"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:'temporal server start-dev \\\n  --dynamic-config-value "frontend.enableUpdateWorkflowExecution=true" \\\n  --dynamic-config-value "frontend.enableUpdateWorkflowExecutionAsyncAccepted=true"\n'})}),"\n",(0,r.jsx)(t.h3,{id:"9-start-worker",children:"9. Start worker"}),"\n",(0,r.jsx)(t.p,{children:"In a different terminal, start the worker."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"go mod tidy\ngo run main.go worker\n"})}),"\n",(0,r.jsx)(t.h3,{id:"10-start-a-workflow",children:"10. Start a workflow"}),"\n",(0,r.jsx)(t.p,{children:"In a different terminal, start a workflow."}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(s.A,{value:"cli",label:"CLI",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",metastring:'title="View CLI options"',children:"go run main.go -h\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",metastring:'title="Execute a workflow"',children:"go run main.go create-foo -d --name test\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",metastring:'title="Send a signal"',children:"go run main.go set-foo-progress -w create-foo/test --progress 5.7\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",metastring:'title="Query the workflow"',children:"go run main.go get-foo-progress -w create-foo/test\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",metastring:'title="Update the workflow"',children:"go run main.go update-foo-progress -w create-foo/test --progress 100\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",metastring:'title="Query the completed workflow"',children:"go run main.go get-foo-progress -w create-foo/test\n"})})]}),(0,r.jsx)(s.A,{value:"client",label:"Client",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",metastring:'title="cmd/client/main.go"',children:'package main\n\nimport (\n  "context"\n  "log"\n\n  examplev1 "github.com/cludden/protoc-gen-go-temporal/gen/example/v1"\n  "go.temporal.io/sdk/client"\n)\n\nfunc main() {\n  c, _ := client.Dial(client.Options{})\n  client, ctx := examplev1.NewClient(c), context.Background()\n\n  run, _ := client.CreateFooAsync(ctx, &examplev1.CreateFooRequest{Name: "test"})\n  log.Printf("started workflow: workflow_id=%s, run_id=%s\\n", run.ID(), run.RunID())\n\n  log.Println("signalling progress")\n  _ = run.SetFooProgress(ctx, &examplev1.SetFooProgressRequest{Progress: 5.7})\n\n  progress, _ := run.GetFooProgress(ctx)\n  log.Printf("queried progress: %s\\n", progress.String())\n\n  update, _ := run.UpdateFooProgress(ctx, &examplev1.SetFooProgressRequest{Progress: 100})\n  log.Printf("updated progress: %s\\n", update.String())\n\n  resp, _ := run.Get(ctx)\n  log.Printf("workflow completed: %s\\n", resp.String())\n}\n'})})})]})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>s});n(6540);var r=n(4164);const o={tabItem:"tabItem_Ymn6"};var a=n(4848);function s(e){let{children:t,hidden:n,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,s),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>F});var r=n(6540),o=n(4164),a=n(3104),s=n(6347),l=n(205),i=n(7485),c=n(1682),u=n(9466);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:o}}=e;return{value:t,label:n,attributes:r,default:o}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function g(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const o=(0,s.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(o.location.search);t.set(a,e),o.replace({...o.location,search:t.toString()})}),[a,o])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,a=p(e),[s,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:a}))),[c,d]=m({queryString:n,groupId:o}),[f,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,a]=(0,u.Dv)(n);return[o,(0,r.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:o}),w=(()=>{const e=c??f;return g({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{w&&i(w)}),[w]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),h(e)}),[d,h,a]),tabValues:a}}var h=n(2303);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(4848);function v(e){let{className:t,block:n,selectedValue:r,selectValue:s,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),u=e=>{const t=e.currentTarget,n=i.indexOf(t),o=l[n].value;o!==r&&(c(t),s(o))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>i.push(e),onKeyDown:d,onClick:u,...a,className:(0,o.A)("tabs__item",w.tabItem,a?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function b(e){let{lazy:t,children:n,selectedValue:o}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function k(e){const t=f(e);return(0,x.jsxs)("div",{className:(0,o.A)("tabs-container",w.tabList),children:[(0,x.jsx)(v,{...e,...t}),(0,x.jsx)(b,{...e,...t})]})}function F(e){const t=(0,h.A)();return(0,x.jsx)(k,{...e,children:d(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var r=n(6540);const o={},a=r.createContext(o);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);