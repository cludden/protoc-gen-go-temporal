"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9441],{8439:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>x,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var o=n(4848),r=n(8453),a=n(1470),l=n(9365);const i={},p="Activities",s={id:"guides/activities",title:"Activities",description:"Implementation",source:"@site/docs/guides/activities.mdx",sourceDirName:"guides",slug:"/guides/activities",permalink:"/protoc-gen-go-temporal/docs/guides/activities",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/activities.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Update",permalink:"/protoc-gen-go-temporal/docs/configuration/update"},next:{title:"Bloblang",permalink:"/protoc-gen-go-temporal/docs/guides/bloblang"}},c={},u=[{value:"Implementation",id:"implementation",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Registration",id:"registration",level:2},{value:"Invocation",id:"invocation",level:2},{value:"Synchronously",id:"synchronously",level:3},{value:"Asynchronously",id:"asynchronously",level:3},{value:"Local",id:"local",level:3},{value:"Traditional",id:"traditional",level:3},{value:"Overriding Defaults",id:"overriding-defaults",level:3}];function m(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"activities",children:"Activities"}),"\n",(0,o.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,o.jsxs)(t.p,{children:["Activities are implemented as methods on a Go ",(0,o.jsx)(t.code,{children:"struct"})," that satisfies the generated ",(0,o.jsx)(t.code,{children:"<Service>Activities"})," interface type generated by this plugin"]}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(l.A,{value:"implementation-go",label:"Go",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/activity"\n)\n\ntype Activities struct {}\n\nfunc (a *Activities) Execute(ctx context.Context, input *examplev1.HelloInput) (*examplev1.HelloOutput, error) {\n    activity.GetLogger(ctx).Info("executing hello activity", "input", input)\n    return &examplev1.HelloOutput{}, nil\n}\n\n// type assertion for illustrative purposes\nvar _ examplev1.ExampleActivities = (*Activities)(nil)\n'})})}),(0,o.jsx)(l.A,{value:"implementation-schema",label:"Schema",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  // Hello returns a friendly greeting\n  rpc Hello(HelloInput) returns (HelloOutput) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})})})]}),"\n",(0,o.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsx)(t.p,{children:"The signature of an activity method varies based on whether or not the activity definition specifies a non-empty input and/or output message type."}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsxs)(l.A,{value:"parameters-both",label:"Input & Output Parameters",children:[(0,o.jsx)(t.p,{children:"Most activities should specify both an input and output message type, even if the type is empty. This to support the addition of fields to either the input or output (or both) in the future without needing to introduce a breaking change."}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  // Hello returns a friendly greeting\n  rpc Hello(HelloInput) returns (HelloOutput) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n)\n\ntype Activities struct {}\n\nfunc (a *Activities) Hello(ctx context.Context, input *examplev1.HelloInput) (*examplev1.HelloOutput, error) {\n    return &examplev1.HelloOutput{}, nil\n}\n'})})]}),(0,o.jsxs)(l.A,{value:"parameters-input",label:"No Output Parameter",children:[(0,o.jsxs)(t.p,{children:["An Activity output can be omitted using the native ",(0,o.jsx)(t.a,{href:"https://protobuf.dev/reference/protobuf/google.protobuf/#empty",children:"google.protobuf.Empty"})," type. This modifies the signature of the Activity method to have a single return value of type ",(0,o.jsx)(t.code,{children:"error"}),". Note that this also requires an additional ",(0,o.jsx)(t.code,{children:"google/protobuf/empty.proto"})," protobuf import statement."]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "google/protobuf/empty.proto";\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  // Hello returns a friendly greeting\n  rpc Hello(HelloInput) returns (google.protobuf.Empty) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n)\n\ntype Activities struct {}\n\nfunc (a *Activities) Hello(ctx context.Context, input *examplev1.HelloInput) error {\n    return nil\n}\n'})})]}),(0,o.jsxs)(l.A,{value:"parameters-output",label:"No Input Parameter",children:[(0,o.jsxs)(t.p,{children:["An Activity input can be omitted using the native ",(0,o.jsx)(t.a,{href:"https://protobuf.dev/reference/protobuf/google.protobuf/#empty",children:"google.protobuf.Empty"})," type. This modifies the signature of the Activity method to have a single input argument of type ",(0,o.jsx)(t.code,{children:"context.Context"}),". Note that this also requires an additional ",(0,o.jsx)(t.code,{children:"google/protobuf/empty.proto"})," protobuf import statement."]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "google/protobuf/empty.proto";\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  // Hello returns a friendly greeting\n  rpc Hello(google.protobuf.Empty) returns (HelloOutput) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n)\n\ntype Activities struct {}\n\nfunc (a *Activities) Hello(ctx context.Context) (*examplev1.HelloOutput, error) {\n    return &examplev1.HelloOutput{}, nil\n}\n'})})]}),(0,o.jsxs)(l.A,{value:"parameters-none",label:"No Parameters",children:[(0,o.jsxs)(t.p,{children:["An Activity can omit both input and output parameters using the native ",(0,o.jsx)(t.a,{href:"https://protobuf.dev/reference/protobuf/google.protobuf/#empty",children:"google.protobuf.Empty"})," type. This modifies the signature of the Activity method to accept a single argument of type ",(0,o.jsx)(t.code,{children:"context.Context"})," and return a single value of type ",(0,o.jsx)(t.code,{children:"error"}),". Note that this also requires an additional ",(0,o.jsx)(t.code,{children:"google/protobuf/empty.proto"})," protobuf import statement."]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "google/protobuf/empty.proto";\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  // Hello returns a friendly greeting\n  rpc Hello(google.protobuf.Empty) returns (google.protobuf.Empty) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n)\n\ntype Activities struct {}\n\nfunc (a *Activities) Hello(ctx context.Context) error {\n    return nil\n}\n'})})]})]}),"\n",(0,o.jsx)(t.h2,{id:"registration",children:"Registration"}),"\n",(0,o.jsx)(t.p,{children:"This plugin generates helpers for registering your activities with a Temporal worker."}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(l.A,{value:"registration-go",label:"Go",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/client"\n    "go.temporal.io/sdk/worker"\n)\n\ntype Activities struct {}\n\nfunc (a *Activities) Hello(ctx context.Context, input *examplev1.HelloInput) (*examplev1.HelloOutput, error) {\n    return &examplev1.HelloOutput{}, nil\n}\n\nfunc main() {\n    // initialize temporal client and worker\n    c, err := client.Dial(client.Options{})\n    if err != nil {\n        log.Fatalf("error initializing client: %v", err)\n    }\n    w := worker.New(c, examplev1.ExampleTaskQueue, worker.Options{})\n\n    // Register all example.v1.Example activities with the worker\n    examplev1.RegisterExampleActivities(w, &Activities{})\n    w.Run(worker.InterruptCh())\n}\n'})})}),(0,o.jsx)(l.A,{value:"registration-schema",label:"Schema",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  option (temporal.v1.service) = {\n    task_queue: "example-v1"\n  };\n\n  // Hello returns a friendly greeting\n  rpc Hello(HelloInput) returns (HelloOutput) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})})})]}),"\n",(0,o.jsx)(t.h2,{id:"invocation",children:"Invocation"}),"\n",(0,o.jsx)(t.p,{children:"This plugin generates typed helpers for executing activities with the appropriate timeouts, retry policies, and task queue. These helpers come in several different flavors for executing activities synchronously, asynchronously, or locally."}),"\n",(0,o.jsx)(t.h3,{id:"synchronously",children:"Synchronously"}),"\n",(0,o.jsx)(t.p,{children:"This plugin generates helpers for executing activities and blocking until the activity completes or a non-retryable error is returned."}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(l.A,{value:"synchronous-go",label:"Go",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/client"\n    "go.temporal.io/sdk/worker"\n)\n\ntype (\n    Workflows struct {}\n\n    Activities struct {}\n\n    FooWorkflow struct {\n        *examplev1.FooWorkflowInput\n    }\n)\n\nfunc (w *Workflows) Foo(ctx workflow.Context, input *examplev1.FooWorkflowInput) (examplev1.FooWorkflow, error) {\n    return &Workflows{input}, nil\n}\n\nfunc (w *FooWorkflow) Execute(ctx workflow.Context) (*examplev1.FooOutput, error) {\n    // execute an example.v1.Example.Bar activity and block until it completes or errors\n    bar, err := examplev1.Bar(ctx, &examplev1.BarInput{})\n    if err != nil {\n        return nil, err\n    }\n    return &examplev1.FooOutput{}, nil\n}\n\nfunc (a *Activities) Bar(ctx context.Context, input *examplev1.BarInput) (*examplev1.BarOutput, error) {\n    return &examplev1.BarOutput{}, nil\n}\n'})})}),(0,o.jsx)(l.A,{value:"synchronous-schema",label:"Schema",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  rpc Foo(FooInput) returns (FooOutput) {\n    option (temporal.v1.workflow) = {};\n  }\n\n  rpc Bar(BarInput) returns (BarOutput) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})})})]}),"\n",(0,o.jsx)(t.h3,{id:"asynchronously",children:"Asynchronously"}),"\n",(0,o.jsx)(t.p,{children:"This plugin generates helpers for starting an activity execution and returning an activity future."}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(l.A,{value:"asynchronous-go-get",label:"Get",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/client"\n    "go.temporal.io/sdk/worker"\n)\n\ntype (\n    Workflows struct {}\n\n    Activities struct {}\n\n    FooWorkflow struct {\n        *examplev1.FooWorkflowInput\n    }\n)\n\nfunc (w *Workflows) Foo(ctx workflow.Context, input *examplev1.FooWorkflowInput) (examplev1.FooWorkflow, error) {\n    return &Workflows{input}, nil\n}\n\nfunc (w *FooWorkflow) Execute(ctx workflow.Context) (*examplev1.FooOutput, error) {\n    // start an example.v1.Example.Bar activity in the background\n    f := examplev1.BarAsync(ctx, &examplev1.BarInput{})\n\n    // block on activity completion or error\n    bar, err := f.Get(ctx)\n    if err != nil {\n        return nil, fmt.Errorf("activity error: %w", err)\n    }\n    return &examplev1.FooOutput{}, nil\n}\n\nfunc (a *Activities) Bar(ctx context.Context, input *examplev1.BarInput) (*examplev1.BarOutput, error) {\n    return &examplev1.BarOutput{}, nil\n}\n'})})}),(0,o.jsx)(l.A,{value:"asynchronous-go-select",label:"Select",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/client"\n    "go.temporal.io/sdk/worker"\n    "go.temporal.io/sdk/workflow"\n)\n\ntype (\n    Workflows struct {}\n\n    Activities struct {}\n\n    FooWorkflow struct {\n        *examplev1.FooWorkflowInput\n    }\n)\n\nfunc (w *Workflows) Foo(ctx workflow.Context, input *examplev1.FooWorkflowInput) (examplev1.FooWorkflow, error) {\n    return &Workflows{input}, nil\n}\n\nfunc (w *FooWorkflow) Execute(ctx workflow.Context) (*examplev1.FooOutput, error) {\n    sel := workflow.NewSelector(ctx)\n    sel.AddFuture(workflow.NewTimer(ctx, time.Minute*5), func(workflow.Future) {\n        workflow.GetLogger(ctx).Info("timer expired")\n    })\n    // start an example.v1.Example.Bar activity in the background and register it with an existing\n    // workflow.Selector\n    examplev1.BarAsync(ctx, &examplev1.BarInput{}).Select(sel, func(f *examplev1.BarFuture) {\n        bar, err := f.Get(ctx)\n        workflow.GetLogger(ctx).Info("bar completed on time", "output", bar, "error", err)\n    })\n    sel.Select(ctx)\n    return &examplev1.FooOutput{}, nil\n}\n\nfunc (a *Activities) Bar(ctx context.Context, input *examplev1.BarInput) (*examplev1.BarOutput, error) {\n    return &examplev1.BarOutput{}, nil\n}\n'})})}),(0,o.jsx)(l.A,{value:"asynchronous-go-future",label:"Future",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/client"\n    "go.temporal.io/sdk/worker"\n    "go.temporal.io/sdk/workflow"\n)\n\ntype (\n    Workflows struct {}\n\n    Activities struct {}\n\n    FooWorkflow struct {\n        *examplev1.FooWorkflowInput\n    }\n)\n\nfunc (w *Workflows) Foo(ctx workflow.Context, input *examplev1.FooWorkflowInput) (examplev1.FooWorkflow, error) {\n    return &Workflows{input}, nil\n}\n\nfunc (w *FooWorkflow) Execute(ctx workflow.Context) (*examplev1.FooOutput, error) {\n    // start an example.v1.Example.Bar activity in the background and register the underlying\n    // workflow.Future with a workflow.Selector directly\n    workflow.NewSelector(ctx).\n      AddFuture(workflow.NewTimer(ctx, time.Minute*5), func(workflow.Future) {\n          workflow.GetLogger(ctx).Info("timer expired")\n      }).\n      AddFuture(examplev1.BarAsync(ctx, &examplev1.BarInput{}).Future, func(f workflow.Future) {\n          var bar examplev1.BarOutput\n          err := f.Get(ctx, &bar)\n          workflow.GetLogger(ctx).Info("bar completed on time", "output", bar, "error", err)\n      }).\n      Select(ctx)\n    return &examplev1.FooOutput{}, nil\n}\n\nfunc (a *Activities) Bar(ctx context.Context, input *examplev1.BarInput) (*examplev1.BarOutput, error) {\n    return &examplev1.BarOutput{}, nil\n}\n'})})}),(0,o.jsx)(l.A,{value:"synchronous-schema",label:"Schema",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  rpc Foo(FooInput) returns (FooOutput) {\n    option (temporal.v1.workflow) = {};\n  }\n\n  rpc Bar(BarInput) returns (BarOutput) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})})})]}),"\n",(0,o.jsx)(t.h3,{id:"local",children:"Local"}),"\n",(0,o.jsxs)(t.p,{children:["This plugin generates helpers for executing an Activity as a ",(0,o.jsx)(t.a,{href:"https://docs.temporal.io/activities#local-activity",children:"Local Activity"}),"."]}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(l.A,{value:"local-go-synchronous",label:"Synchronous",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/client"\n    "go.temporal.io/sdk/worker"\n)\n\ntype (\n    Workflows struct {}\n\n    Activities struct {}\n\n    FooWorkflow struct {\n        *examplev1.FooWorkflowInput\n    }\n)\n\nfunc (w *Workflows) Foo(ctx workflow.Context, input *examplev1.FooWorkflowInput) (examplev1.FooWorkflow, error) {\n    return &Workflows{input}, nil\n}\n\nfunc (w *FooWorkflow) Execute(ctx workflow.Context) (*examplev1.FooOutput, error) {\n    // start a local example.v1.Example.Bar activity and block on activity completion or error\n    bar, err := examplev1.BarLocal(ctx, &examplev1.BarInput{})\n    if err != nil {\n        return nil, fmt.Errorf("activity error: %w", err)\n    }\n    return &examplev1.FooOutput{}, nil\n}\n\nfunc (a *Activities) Bar(ctx context.Context, input *examplev1.BarInput) (*examplev1.BarOutput, error) {\n    return &examplev1.BarOutput{}, nil\n}\n'})})}),(0,o.jsx)(l.A,{value:"local-go-asynchronous",label:"Asynchronous",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/client"\n    "go.temporal.io/sdk/worker"\n    "go.temporal.io/sdk/workflow"\n)\n\ntype (\n    Workflows struct {}\n\n    Activities struct {}\n\n    FooWorkflow struct {\n        *examplev1.FooWorkflowInput\n    }\n)\n\nfunc (w *Workflows) Foo(ctx workflow.Context, input *examplev1.FooWorkflowInput) (examplev1.FooWorkflow, error) {\n    return &Workflows{input}, nil\n}\n\nfunc (w *FooWorkflow) Execute(ctx workflow.Context) (*examplev1.FooOutput, error) {\n    // start a local example.v1.Example.Bar activity in the background \n    f := examplev1.BarLocalAsync(ctx, &examplev1.BarInput{})\n    \n    // block on completion\n    bar, err := f.Get(ctx)\n    if err != nil {\n        return nil, fmt.Errorf("activity error: %w", err)\n    }\n    return &examplev1.FooOutput{}, nil\n}\n\nfunc (a *Activities) Bar(ctx context.Context, input *examplev1.BarInput) (*examplev1.BarOutput, error) {\n    return &examplev1.BarOutput{}, nil\n}\n'})})}),(0,o.jsxs)(l.A,{value:"local-go-synchronous-custom",label:"Custom Implementation",children:[(0,o.jsx)(t.p,{children:"It's possible to override the implementation of a local activity execution."}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/client"\n    "go.temporal.io/sdk/worker"\n)\n\ntype (\n    Workflows struct {}\n\n    FooWorkflow struct {\n        *examplev1.FooWorkflowInput\n    }\n)\n\nfunc (w *Workflows) Foo(ctx workflow.Context, input *examplev1.FooWorkflowInput) (examplev1.FooWorkflow, error) {\n    return &Workflows{input}, nil\n}\n\nfunc (w *FooWorkflow) Execute(ctx workflow.Context) (*examplev1.FooOutput, error) {\n    // start a local example.v1.Example.Bar activity and block on activity completion or error\n    bar, err := examplev1.BarLocal(ctx, &examplev1.BarInput{}, examplev1.NewLocalBarActivityOptions().Local(\n        func(ctx context.Context, input *examplev1.BarInput) (*examplev1.BarOutput, error) {\n            return &examplev1.BarOutput{}, nil\n        }\n    ))\n    if err != nil {\n        return nil, fmt.Errorf("activity error: %w", err)\n    }\n    return &examplev1.FooOutput{}, nil\n}\n'})})]}),(0,o.jsx)(l.A,{value:"synchronous-schema",label:"Schema",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  rpc Foo(FooInput) returns (FooOutput) {\n    option (temporal.v1.workflow) = {};\n  }\n\n  rpc Bar(BarInput) returns (BarOutput) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})})})]}),"\n",(0,o.jsx)(t.h3,{id:"traditional",children:"Traditional"}),"\n",(0,o.jsxs)(t.p,{children:["It's also possible to execute an activity using the SDK's ",(0,o.jsx)(t.a,{href:"https://pkg.go.dev/go.temporal.io/sdk/workflow#ExecuteActivity",children:"ExecuteActivity"})," method."]}),"\n",(0,o.jsx)(t.admonition,{type:"warning",children:(0,o.jsx)(t.p,{children:"Activity defaults are not applied in this scenario, so it becomes necessary to manually configure the workflow context with appropriate activity options."})}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(l.A,{value:"synchronous-go",label:"Go",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/workflow"\n)\n\ntype (\n    Workflows struct {}\n\n    Activities struct {}\n\n    FooWorkflow struct {\n        *examplev1.FooWorkflowInput\n    }\n)\n\nfunc (w *Workflows) Foo(ctx workflow.Context, input *examplev1.FooWorkflowInput) (examplev1.FooWorkflow, error) {\n    return &Workflows{input}, nil\n}\n\nfunc (w *FooWorkflow) Execute(ctx workflow.Context) (*examplev1.FooOutput, error) {\n    ao := workflow.GetActivityOptions(ctx)\n    ao.StartToCloseTimeout = time.Minute\n    ctx = workflow.WithActivityOptions(ctx, ao)\n    \n    // execute an example.v1.Example.Bar activity and block until it completes or errors\n    var bar examplev1.BarOutput\n    if err := workflow.ExecuteActivity(ctx, examplev1.BarActivityName, &examplev1.BarInput{}).Get(ctx, &bar); err != nil {\n        return nil, fmt.Errorf("activity error: %w", err)\n    }\n    return &examplev1.FooOutput{}, nil\n}\n\nfunc (a *Activities) Bar(ctx context.Context, input *examplev1.BarInput) (*examplev1.BarOutput, error) {\n    return &examplev1.BarOutput{}, nil\n}\n'})})}),(0,o.jsx)(l.A,{value:"synchronous-schema",label:"Schema",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  rpc Foo(FooInput) returns (FooOutput) {\n    option (temporal.v1.workflow) = {};\n  }\n\n  rpc Bar(BarInput) returns (BarOutput) {\n    option (temporal.v1.activity) = {};\n  }\n}\n'})})})]}),"\n",(0,o.jsx)(t.h3,{id:"overriding-defaults",children:"Overriding Defaults"}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(l.A,{value:"synchronous-go",label:"Go",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "context"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/workflow"\n)\n\ntype (\n    Workflows struct {}\n\n    Activities struct {}\n\n    FooWorkflow struct {\n        *examplev1.FooWorkflowInput\n    }\n)\n\nfunc (w *Workflows) Foo(ctx workflow.Context, input *examplev1.FooWorkflowInput) (examplev1.FooWorkflow, error) {\n    return &Workflows{input}, nil\n}\n\nfunc (w *FooWorkflow) Execute(ctx workflow.Context) (*examplev1.FooOutput, error) {\n    // execute an example.v1.Example.Bar activity and block until it completes or errors\n    bar, err := examplev1.Bar(ctx, &examplev1.BarInput{}, examplev1.NewBarActivityOptions().WithActivityOptions(workflow.ActivityOptions{\n        StartToCloseTimeout: time.Second*30,\n    }))\n    if err != nil {\n        return nil, fmt.Errorf("activity error: %w", err)\n    }\n    return &examplev1.FooOutput{}, nil\n}\n\nfunc (a *Activities) Bar(ctx context.Context, input *examplev1.BarInput) (*examplev1.BarOutput, error) {\n    return &examplev1.BarOutput{}, nil\n}\n'})})}),(0,o.jsx)(l.A,{value:"synchronous-schema",label:"Schema",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  rpc Foo(FooInput) returns (FooOutput) {\n    option (temporal.v1.workflow) = {};\n  }\n\n  rpc Bar(BarInput) returns (BarOutput) {\n    option (temporal.v1.activity) = {\n      start_to_close_timeout: { seconds: 60 }\n    };\n  }\n}\n'})})})]})]})}function x(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>l});n(6540);var o=n(4164);const r={tabItem:"tabItem_Ymn6"};var a=n(4848);function l(e){let{children:t,hidden:n,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.A)(r.tabItem,l),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>b});var o=n(6540),r=n(4164),a=n(3104),l=n(6347),i=n(205),p=n(7485),s=n(1682),c=n(9466);function u(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:o,default:r}}=e;return{value:t,label:n,attributes:o,default:r}}))}(n);return function(e){const t=(0,s.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function x(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,p.aZ)(a),(0,o.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function d(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=m(e),[l,p]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!x({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const o=n.find((e=>e.default))??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:a}))),[s,u]=v({queryString:n,groupId:r}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,c.Dv)(n);return[r,(0,o.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),f=(()=>{const e=s??d;return x({value:e,tabValues:a})?e:null})();(0,i.A)((()=>{f&&p(f)}),[f]);return{selectedValue:l,selectValue:(0,o.useCallback)((e=>{if(!x({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);p(e),u(e),g(e)}),[u,g,a]),tabValues:a}}var g=n(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var h=n(4848);function w(e){let{className:t,block:n,selectedValue:o,selectValue:l,tabValues:i}=e;const p=[],{blockElementScrollPositionUntilNextRender:s}=(0,a.a_)(),c=e=>{const t=e.currentTarget,n=p.indexOf(t),r=i[n].value;r!==o&&(s(t),l(r))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return(0,h.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,h.jsx)("li",{role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,ref:e=>p.push(e),onKeyDown:u,onClick:c,...a,className:(0,r.A)("tabs__item",f.tabItem,a?.className,{"tabs__item--active":o===t}),children:n??t},t)}))})}function k(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,h.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function y(e){const t=d(e);return(0,h.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,h.jsx)(w,{...e,...t}),(0,h.jsx)(k,{...e,...t})]})}function b(e){const t=(0,g.A)();return(0,h.jsx)(y,{...e,children:u(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var o=n(6540);const r={},a=o.createContext(r);function l(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);