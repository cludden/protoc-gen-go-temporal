"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[456],{8050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var l=n(4848),r=n(8453),a=n(1470),o=n(9365);const s={},i="Queries",u={id:"guides/queries",title:"Queries",description:"Implementation",source:"@site/docs/guides/queries.mdx",sourceDirName:"guides",slug:"/guides/queries",permalink:"/protoc-gen-go-temporal/docs/guides/queries",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/queries.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Activities",permalink:"/protoc-gen-go-temporal/docs/guides/activities"},next:{title:"Signals",permalink:"/protoc-gen-go-temporal/docs/guides/signals"}},c={},p=[{value:"Implementation",id:"implementation",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Invocation",id:"invocation",level:2},{value:"Client",id:"client",level:3},{value:"Command Line Interface",id:"command-line-interface",level:3},{value:"Cross-Namespace (XNS)",id:"cross-namespace-xns",level:3}];function m(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h1,{id:"queries",children:"Queries"}),"\n",(0,l.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,l.jsx)(t.p,{children:"A query is implemented as a method on a workflow struct."}),"\n",(0,l.jsxs)(a.A,{children:[(0,l.jsx)(o.A,{value:"implementation-go",label:"Go",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/workflow"\n)\n\ntype HelloWorkflow struct {\n    *examplev1.HelloWorkflowInput\n}\n\nfunc (w *HelloWorkflow) Execute(ctx workflow.Context) (*examplev1.HelloOutput, error) {\n    workflow.GetLogger(ctx).Info("executing hello workflow", "input", w.Req)\n    return &examplev1.HelloOutput{}, nil\n}\n\nfunc (w *HelloWorkflow) GetHelloStatus(input *examplev1.GetHelloStatusInput) (*examplev1.GetHelloStatusOutput, error) {\n    return &examplev1.GetHelloStatusOutput{\n        Status: w.Req.GetStatus(),\n    }, nil\n}\n'})})}),(0,l.jsx)(o.A,{value:"implementation-schema",label:"Schema",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  // Hello returns a friendly greeting\n  rpc Hello(HelloInput) returns (HelloOutput) {\n    option (temporal.v1.workflow) = {\n      query: { ref: "GetHelloStatus" }\n    };\n  }\n\n  // GetHelloStatus retrieves the status of a Hello workflow\n  rpc GetHelloStatus(GetHelloStatusInput) returns (GetHelloStatusOutput) {\n    option (temporal.v1.query) = {};\n  }\n}\n'})})})]}),"\n",(0,l.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(t.p,{children:["Query definitions can omit an input parameter by specifying the native ",(0,l.jsx)(t.code,{children:"google.protobuf.Empty"})," message type in its place. This requires an additional ",(0,l.jsx)(t.code,{children:"google/protobuf/empty.proto"})," protobuf import."]}),"\n",(0,l.jsx)(t.admonition,{type:"warning",children:(0,l.jsx)(t.p,{children:"Query definitions must specify a non-empty output parameter."})}),"\n",(0,l.jsxs)(a.A,{children:[(0,l.jsx)(o.A,{value:"implementation-go",label:"Go",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/workflow"\n)\n\ntype HelloWorkflow struct {\n    *examplev1.HelloWorkflowInput\n}\n\nfunc (w *HelloWorkflow) Execute(ctx workflow.Context) (*examplev1.HelloOutput, error) {\n    workflow.GetLogger(ctx).Info("executing hello workflow", "input", w.Req)\n    return &examplev1.HelloOutput{}, nil\n}\n\nfunc (w *HelloWorkflow) GetHelloStatus() (*examplev1.GetHelloStatusOutput, error) {\n    return &examplev1.GetHelloStatusOutput{\n        Status: w.Req.GetStatus(),\n    }, nil\n}\n'})})}),(0,l.jsx)(o.A,{value:"implementation-schema",label:"Schema",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nimport "google/protobuf/empty.proto";\nimport "temporal/v1/temporal.proto";\n\nservice Example {\n  // Hello returns a friendly greeting\n  rpc Hello(HelloInput) returns (HelloOutput) {\n    option (temporal.v1.workflow) = {\n      query: { ref: "GetHelloStatus" }\n    };\n  }\n\n  // GetHelloStatus retrieves the status of a Hello workflow\n  rpc GetHelloStatus(google.protobuf.Empty) returns (GetHelloStatusOutput) {\n    option (temporal.v1.query) = {};\n  }\n}\n'})})})]}),"\n",(0,l.jsx)(t.h2,{id:"invocation",children:"Invocation"}),"\n",(0,l.jsx)(t.p,{children:"The plugin supports several methods for executing protobuf queries, each of which is outlined in more detail below."}),"\n",(0,l.jsx)(t.h3,{id:"client",children:"Client"}),"\n",(0,l.jsxs)(t.p,{children:["Consumers can utilize the generated Client to execute queries from any Go application. See the ",(0,l.jsx)(t.a,{href:"/docs/guides/clients",children:"Clients guide"})," for more usage details."]}),"\n",(0,l.jsxs)(a.A,{children:[(0,l.jsx)(o.A,{value:"client-go",label:"Go",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "context"\n    "log"\n\n    examplev1 "path/to/gen/example/v1"\n    "go.temporal.io/sdk/client"\n)\n\nfunc main() {\n    // initialize temporal client\n    c, err := client.Dial(client.Options{})\n    if err != nil {\n        log.Fatalf("error initializing client: %v", err)\n    }\n\n    // initialize temporal protobuf client\n    ctx, client := context.Background(), examplev1.NewExampleClient(c)\n\n    // execute an example.v1.Example.GetHelloStatus query\n    // via workflow ID\n    status, err := client.GetHelloStatus(ctx, "wf-id", "", &examplev1.GetHelloStatusInput{})\n    if err != nil {\n        log.Fatalf("error executing example.v1.Example.GetHelloStatus query: %v", err)\n    }\n\n    // or use the corresponding query method defined on the\n    // workflow run\n    run, err := client.HelloAsync(ctx, &examplev1.HelloInput{})\n    if err != nil {\n        log.Fatalf("error starting example.v1.Example.Hello workflow: %v", err)\n    }\n    status, err = run.GetHelloStatus(&examplev1.GetHelloStatusInput{})\n    if err != nil {\n        log.Fatalf("error executing example.v1.Example.GetHelloStatus query: %v", err)\n    }\n}\n'})})}),(0,l.jsx)(o.A,{value:"client-schema",label:"Schema",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nservice Example {\n  option (temporal.v1.service) = {\n    task_queue: "example-v1"\n  }\n\n  rpc Hello(HelloInput) returns (HelloOutput) {\n    option (temporal.v1.workflow) = {};\n  }\n\n  rpc GetHelloStatus(GetHelloStatusInput) returns (GetHelloStatusOutput) {\n    option (temporal.v1.query) = {};\n  }\n}\n'})})})]}),"\n",(0,l.jsx)(t.h3,{id:"command-line-interface",children:"Command Line Interface"}),"\n",(0,l.jsxs)(t.p,{children:["Consumers can utilize the generated Command Line Interface as a standalone application for executing queries. See the ",(0,l.jsx)(t.a,{href:"/docs/guides/cli",children:"CLI guide"})," for more usage details."]}),"\n",(0,l.jsxs)(a.A,{children:[(0,l.jsxs)(o.A,{value:"cli-shell",label:"Shell",children:[(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-sh",metastring:'title="example -h"',children:"NAME:\n  example - an example temporal cli\n\nUSAGE:\n  example [global options] command [command options] [arguments...]\n\nCOMMANDS:\n  help, h  Shows a list of commands or help for one command\n    QUERIES:\n      get-hello-status    GetHelloStatus retrieves the status of a Hello workflow\n    WORKFLOWS:\n      hello               Hello returns a friendly greeting\n"})}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-sh",metastring:'title="example get-hello-status -h"',children:"NAME:\n  example get-hello-status - GetHelloStatus retrieves the status of a Hello workflow\n\nUSAGE:\n  example get-hello-status [command options] [arguments...]\n\nCATEGORY:\n   WORKFLOWS\n\nOPTIONS:\n   --help, -h                      show help\n   --input-file value, -f value    path to json-formatted input file\n   --run-id value, -r value        run id\n   --workflow-id value, -w value   workflow id\n\n   INPUT\n\n   --format value    // Format specifies the output format\n"})}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-json",metastring:'title="example get-hello-status -w foo --format json"',children:'{\n  "result": "..."\n}\n'})})]}),(0,l.jsx)(o.A,{value:"cli-go",label:"Go",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-go",metastring:'title="main.go"',children:'package main\n\nimport (\n    "log"\n    "os"\n\n    examplev1 "path/to/gen/example/v1"\n)\n\nfunc main() {\n    app, err := examplev1.NewExampleCLI()\n    if err != nil {\n        log.Fatalf("error initializing cli: %v", err)\n    }\n\n    if err := app.Run(os.Args); err != nil {\n        log.Fatal(err)\n    }\n}\n'})})}),(0,l.jsx)(o.A,{value:"cli-schema",label:"Schema",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nservice Example {\n  option (temporal.v1.service) = {\n    task_queue: "example-v1"\n  }\n\n  // Hello returns a friendly greeting\n  rpc Hello(HelloInput) returns (HelloOutput) {\n    option (temporal.v1.workflow) = {};\n  }\n\n  // GetHelloStatus retrieves the status of a Hello workflow\n  rpc GetHelloStatus(GetHelloStatusInput) returns (GetHelloStatusOutput) {\n    option (temporal.v1.query) = {};\n  }\n}\n\nmessage HelloInput {\n  // Name specifies the subject to greet\n  string name = 1;\n}\n\nmessage HelloOutput {\n  string result = 1;\n}\n\nmessage GetHelloStatusInput {\n  // Format specifies the output format\n  string format = 1;\n}\n\nmessage GetHelloStatusOutput {\n  string status = 1;\n}\n'})})})]}),"\n",(0,l.jsx)(t.h3,{id:"cross-namespace-xns",children:"Cross-Namespace (XNS)"}),"\n",(0,l.jsxs)(t.p,{children:["Queries can be executed from other workflows in a different Temporal namespace or even an entirely separate Temporal cluster (e.g. on-prem to cloud). See the ",(0,l.jsx)(t.a,{href:"/docs/guides/xns",children:"Cross-Namespace guide"})," for more usage details."]}),"\n",(0,l.jsxs)(a.A,{children:[(0,l.jsx)(o.A,{value:"xns-go",label:"Go",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-go",metastring:'title="example.go"',children:'package example\n\nimport (\n    "fmt"\n\n    examplev1 "path/to/gen/example/v1"\n    "path/to/gen/example/v1/examplev1xns"\n    "go.temporal.io/sdk/workflow"\n)\n\nfunc MyWorkflow(ctx workflow.Context) error {\n    run, err := examplev1xns.HelloAsync(ctx, &examplev1.HelloInput{})\n    if err != nil {\n        return fmt.Errorf("error starting example.v1.Example.Hello xns workflow: %w", err)\n    }\n\n    status, err := run.GetHelloStatus(ctx, &examplev1.GetHelloStatusInput{})\n    if err != nil {\n        return fmt.Errorf("error querying workflow: %w", err)\n    }\n\n    _, err = run.Get(ctx)\n    return err\n}\n'})})}),(0,l.jsx)(o.A,{value:"xns-schema",label:"Schema",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-protobuf",metastring:'title="example.proto"',children:'syntax="proto3";\n\npackage example.v1;\n\nservice Example {\n  option (temporal.v1.service) = {\n    task_queue: "example-v1"\n  }\n\n  rpc Hello(HelloInput) returns (HelloOutput) {\n    option (temporal.v1.workflow) = {\n      xns: {\n        heartbeat_interval: { seconds: 10 }\n        heartbeat_timeout: { seconds: 30 }\n        start_to_close_timeout: { seconds: 300 }\n      }\n    };\n  }\n\n  rpc GetHelloStatus(GetHelloStatusInput) returns (GetHelloStatusOutput) {\n    option (temporal.v1.query) = {\n      xns: {\n        heartbeat_interval: { seconds: 10 }\n        heartbeat_timeout: { seconds: 30 }\n        start_to_close_timeout: { seconds: 60 }\n      }\n    };\n  }\n}\n'})})})]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(m,{...e})}):m(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>o});n(6540);var l=n(4164);const r={tabItem:"tabItem_Ymn6"};var a=n(4848);function o(e){let{children:t,hidden:n,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,l.A)(r.tabItem,o),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>j});var l=n(6540),r=n(4164),a=n(3104),o=n(6347),s=n(205),i=n(7485),u=n(1682),c=n(9466);function p(e){return l.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??function(e){return p(e).map((e=>{let{props:{value:t,label:n,attributes:l,default:r}}=e;return{value:t,label:n,attributes:l,default:r}}))}(n);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const r=(0,o.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i.aZ)(a),(0,l.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function x(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=m(e),[o,i]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const l=n.find((e=>e.default))??n[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:t,tabValues:a}))),[u,p]=h({queryString:n,groupId:r}),[x,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,c.Dv)(n);return[r,(0,l.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),g=(()=>{const e=u??x;return d({value:e,tabValues:a})?e:null})();(0,s.A)((()=>{g&&i(g)}),[g]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!d({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),f(e)}),[p,f,a]),tabValues:a}}var f=n(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(4848);function w(e){let{className:t,block:n,selectedValue:l,selectValue:o,tabValues:s}=e;const i=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.a_)(),c=e=>{const t=e.currentTarget,n=i.indexOf(t),r=s[n].value;r!==l&&(u(t),o(r))},p=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:s.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,ref:e=>i.push(e),onKeyDown:p,onClick:c,...a,className:(0,r.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":l===t}),children:n??t},t)}))})}function b(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function H(e){const t=x(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,v.jsx)(w,{...e,...t}),(0,v.jsx)(b,{...e,...t})]})}function j(e){const t=(0,f.A)();return(0,v.jsx)(H,{...e,children:p(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var l=n(6540);const r={},a=l.createContext(r);function o(e){const t=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),l.createElement(a.Provider,{value:t},e.children)}}}]);