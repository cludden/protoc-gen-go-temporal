// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: test/patch/v1/pv77.proto

package patchv1

import (
	_ "github.com/cludden/protoc-gen-go-temporal/gen/temporal/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pv77Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next []string `protobuf:"bytes,1,rep,name=next,proto3" json:"next,omitempty"`
}

func (x *Pv77Input) Reset() {
	*x = Pv77Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77Input) ProtoMessage() {}

func (x *Pv77Input) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77Input.ProtoReflect.Descriptor instead.
func (*Pv77Input) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{0}
}

func (x *Pv77Input) GetNext() []string {
	if x != nil {
		return x.Next
	}
	return nil
}

type Pv77Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskQueues []string          `protobuf:"bytes,1,rep,name=task_queues,json=taskQueues,proto3" json:"task_queues,omitempty"`
	Defaults   map[string]string `protobuf:"bytes,2,rep,name=defaults,proto3" json:"defaults,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pv77Output) Reset() {
	*x = Pv77Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77Output) ProtoMessage() {}

func (x *Pv77Output) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77Output.ProtoReflect.Descriptor instead.
func (*Pv77Output) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{1}
}

func (x *Pv77Output) GetTaskQueues() []string {
	if x != nil {
		return x.TaskQueues
	}
	return nil
}

func (x *Pv77Output) GetDefaults() map[string]string {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Pv77FooInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next []string `protobuf:"bytes,1,rep,name=next,proto3" json:"next,omitempty"`
}

func (x *Pv77FooInput) Reset() {
	*x = Pv77FooInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77FooInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77FooInput) ProtoMessage() {}

func (x *Pv77FooInput) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77FooInput.ProtoReflect.Descriptor instead.
func (*Pv77FooInput) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{2}
}

func (x *Pv77FooInput) GetNext() []string {
	if x != nil {
		return x.Next
	}
	return nil
}

type Pv77FooOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskQueues []string          `protobuf:"bytes,1,rep,name=task_queues,json=taskQueues,proto3" json:"task_queues,omitempty"`
	Defaults   map[string]string `protobuf:"bytes,2,rep,name=defaults,proto3" json:"defaults,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pv77FooOutput) Reset() {
	*x = Pv77FooOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77FooOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77FooOutput) ProtoMessage() {}

func (x *Pv77FooOutput) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77FooOutput.ProtoReflect.Descriptor instead.
func (*Pv77FooOutput) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{3}
}

func (x *Pv77FooOutput) GetTaskQueues() []string {
	if x != nil {
		return x.TaskQueues
	}
	return nil
}

func (x *Pv77FooOutput) GetDefaults() map[string]string {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Pv77BarInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next []string `protobuf:"bytes,1,rep,name=next,proto3" json:"next,omitempty"`
}

func (x *Pv77BarInput) Reset() {
	*x = Pv77BarInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77BarInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77BarInput) ProtoMessage() {}

func (x *Pv77BarInput) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77BarInput.ProtoReflect.Descriptor instead.
func (*Pv77BarInput) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{4}
}

func (x *Pv77BarInput) GetNext() []string {
	if x != nil {
		return x.Next
	}
	return nil
}

type Pv77BarOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskQueues []string          `protobuf:"bytes,1,rep,name=task_queues,json=taskQueues,proto3" json:"task_queues,omitempty"`
	Defaults   map[string]string `protobuf:"bytes,2,rep,name=defaults,proto3" json:"defaults,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pv77BarOutput) Reset() {
	*x = Pv77BarOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77BarOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77BarOutput) ProtoMessage() {}

func (x *Pv77BarOutput) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77BarOutput.ProtoReflect.Descriptor instead.
func (*Pv77BarOutput) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{5}
}

func (x *Pv77BarOutput) GetTaskQueues() []string {
	if x != nil {
		return x.TaskQueues
	}
	return nil
}

func (x *Pv77BarOutput) GetDefaults() map[string]string {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Pv77BazInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next []string `protobuf:"bytes,1,rep,name=next,proto3" json:"next,omitempty"`
}

func (x *Pv77BazInput) Reset() {
	*x = Pv77BazInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77BazInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77BazInput) ProtoMessage() {}

func (x *Pv77BazInput) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77BazInput.ProtoReflect.Descriptor instead.
func (*Pv77BazInput) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{6}
}

func (x *Pv77BazInput) GetNext() []string {
	if x != nil {
		return x.Next
	}
	return nil
}

type Pv77BazOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskQueues []string          `protobuf:"bytes,1,rep,name=task_queues,json=taskQueues,proto3" json:"task_queues,omitempty"`
	Defaults   map[string]string `protobuf:"bytes,2,rep,name=defaults,proto3" json:"defaults,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pv77BazOutput) Reset() {
	*x = Pv77BazOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77BazOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77BazOutput) ProtoMessage() {}

func (x *Pv77BazOutput) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77BazOutput.ProtoReflect.Descriptor instead.
func (*Pv77BazOutput) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{7}
}

func (x *Pv77BazOutput) GetTaskQueues() []string {
	if x != nil {
		return x.TaskQueues
	}
	return nil
}

func (x *Pv77BazOutput) GetDefaults() map[string]string {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Pv77QuxInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next []string `protobuf:"bytes,1,rep,name=next,proto3" json:"next,omitempty"`
}

func (x *Pv77QuxInput) Reset() {
	*x = Pv77QuxInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77QuxInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77QuxInput) ProtoMessage() {}

func (x *Pv77QuxInput) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77QuxInput.ProtoReflect.Descriptor instead.
func (*Pv77QuxInput) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{8}
}

func (x *Pv77QuxInput) GetNext() []string {
	if x != nil {
		return x.Next
	}
	return nil
}

type Pv77QuxOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskQueues []string          `protobuf:"bytes,1,rep,name=task_queues,json=taskQueues,proto3" json:"task_queues,omitempty"`
	Defaults   map[string]string `protobuf:"bytes,2,rep,name=defaults,proto3" json:"defaults,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pv77QuxOutput) Reset() {
	*x = Pv77QuxOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_patch_v1_pv77_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pv77QuxOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pv77QuxOutput) ProtoMessage() {}

func (x *Pv77QuxOutput) ProtoReflect() protoreflect.Message {
	mi := &file_test_patch_v1_pv77_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pv77QuxOutput.ProtoReflect.Descriptor instead.
func (*Pv77QuxOutput) Descriptor() ([]byte, []int) {
	return file_test_patch_v1_pv77_proto_rawDescGZIP(), []int{9}
}

func (x *Pv77QuxOutput) GetTaskQueues() []string {
	if x != nil {
		return x.TaskQueues
	}
	return nil
}

func (x *Pv77QuxOutput) GetDefaults() map[string]string {
	if x != nil {
		return x.Defaults
	}
	return nil
}

var File_test_patch_v1_pv77_proto protoreflect.FileDescriptor

var file_test_patch_v1_pv77_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x76, 0x37, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x74, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a, 0x09, 0x50, 0x76, 0x37, 0x37, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x0a, 0x50, 0x76, 0x37, 0x37, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x22, 0x0a, 0x0c, 0x50, 0x76, 0x37, 0x37,
	0x46, 0x6f, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0xb5, 0x01, 0x0a,
	0x0d, 0x50, 0x76, 0x37, 0x37, 0x46, 0x6f, 0x6f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12,
	0x46, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x46, 0x6f, 0x6f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x22, 0x0a, 0x0c, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x0d, 0x50, 0x76, 0x37,
	0x37, 0x42, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76,
	0x37, 0x37, 0x42, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x22, 0x0a, 0x0c, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x7a, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x0d, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x7a,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x73,
	0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61,
	0x7a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a,
	0x3b, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x22, 0x0a, 0x0c,
	0x50, 0x76, 0x37, 0x37, 0x51, 0x75, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x22, 0xb5, 0x01, 0x0a, 0x0d, 0x50, 0x76, 0x37, 0x37, 0x51, 0x75, 0x78, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x51, 0x75, 0x78, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x96, 0x01, 0x0a, 0x0e, 0x50, 0x76, 0x37,
	0x37, 0x46, 0x6f, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x07, 0x50,
	0x76, 0x37, 0x37, 0x46, 0x6f, 0x6f, 0x12, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x46, 0x6f, 0x6f, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x46, 0x6f, 0x6f, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x2b, 0x8a, 0xc4, 0x03, 0x00, 0x92, 0xc4, 0x03, 0x23, 0x22, 0x02, 0x08, 0x05, 0x3a,
	0x1d, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x76, 0x37, 0x37, 0x46, 0x6f, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x11,
	0x8a, 0xc4, 0x03, 0x0d, 0x0a, 0x07, 0x70, 0x76, 0x37, 0x37, 0x2d, 0x76, 0x31, 0x1a, 0x02, 0x08,
	0x02, 0x32, 0x98, 0x01, 0x0a, 0x0e, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x07, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x72, 0x12,
	0x1b, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37,
	0x37, 0x42, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x2b, 0x8a, 0xc4, 0x03, 0x00,
	0x92, 0xc4, 0x03, 0x23, 0x22, 0x02, 0x08, 0x05, 0x3a, 0x1d, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x13, 0x8a, 0xc4, 0x03, 0x0f, 0x0a, 0x07, 0x70,
	0x76, 0x37, 0x37, 0x2d, 0x76, 0x31, 0x1a, 0x04, 0x08, 0x02, 0x10, 0x01, 0x32, 0x98, 0x01, 0x0a,
	0x0e, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x7a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x71, 0x0a, 0x07, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x7a, 0x12, 0x1b, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x42,
	0x61, 0x7a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x7a, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x2b, 0x8a, 0xc4, 0x03, 0x00, 0x92, 0xc4, 0x03, 0x23, 0x22,
	0x02, 0x08, 0x05, 0x3a, 0x1d, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x42, 0x61, 0x7a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x1a, 0x13, 0x8a, 0xc4, 0x03, 0x0f, 0x0a, 0x07, 0x70, 0x76, 0x37, 0x37, 0x2d, 0x76,
	0x33, 0x1a, 0x04, 0x08, 0x02, 0x10, 0x02, 0x32, 0x98, 0x01, 0x0a, 0x0e, 0x50, 0x76, 0x37, 0x37,
	0x51, 0x75, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x07, 0x50, 0x76,
	0x37, 0x37, 0x51, 0x75, 0x78, 0x12, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x51, 0x75, 0x78, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x76, 0x37, 0x37, 0x51, 0x75, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x2b, 0x8a, 0xc4, 0x03, 0x00, 0x92, 0xc4, 0x03, 0x23, 0x22, 0x02, 0x08, 0x05, 0x3a, 0x1d,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x76,
	0x37, 0x37, 0x51, 0x75, 0x78, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x13, 0x8a,
	0xc4, 0x03, 0x0f, 0x0a, 0x07, 0x70, 0x76, 0x37, 0x37, 0x2d, 0x76, 0x32, 0x1a, 0x04, 0x08, 0x02,
	0x10, 0x03, 0x42, 0xb9, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x50, 0x76, 0x37, 0x37, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6c, 0x75, 0x64, 0x64, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2d, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f,
	0x76, 0x31, 0x3b, 0x70, 0x61, 0x74, 0x63, 0x68, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x58,
	0xaa, 0x02, 0x0d, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0d, 0x54, 0x65, 0x73, 0x74, 0x5c, 0x50, 0x61, 0x74, 0x63, 0x68, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x19, 0x54, 0x65, 0x73, 0x74, 0x5c, 0x50, 0x61, 0x74, 0x63, 0x68, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x54,
	0x65, 0x73, 0x74, 0x3a, 0x3a, 0x50, 0x61, 0x74, 0x63, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_patch_v1_pv77_proto_rawDescOnce sync.Once
	file_test_patch_v1_pv77_proto_rawDescData = file_test_patch_v1_pv77_proto_rawDesc
)

func file_test_patch_v1_pv77_proto_rawDescGZIP() []byte {
	file_test_patch_v1_pv77_proto_rawDescOnce.Do(func() {
		file_test_patch_v1_pv77_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_patch_v1_pv77_proto_rawDescData)
	})
	return file_test_patch_v1_pv77_proto_rawDescData
}

var file_test_patch_v1_pv77_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_test_patch_v1_pv77_proto_goTypes = []any{
	(*Pv77Input)(nil),     // 0: test.patch.v1.Pv77Input
	(*Pv77Output)(nil),    // 1: test.patch.v1.Pv77Output
	(*Pv77FooInput)(nil),  // 2: test.patch.v1.Pv77FooInput
	(*Pv77FooOutput)(nil), // 3: test.patch.v1.Pv77FooOutput
	(*Pv77BarInput)(nil),  // 4: test.patch.v1.Pv77BarInput
	(*Pv77BarOutput)(nil), // 5: test.patch.v1.Pv77BarOutput
	(*Pv77BazInput)(nil),  // 6: test.patch.v1.Pv77BazInput
	(*Pv77BazOutput)(nil), // 7: test.patch.v1.Pv77BazOutput
	(*Pv77QuxInput)(nil),  // 8: test.patch.v1.Pv77QuxInput
	(*Pv77QuxOutput)(nil), // 9: test.patch.v1.Pv77QuxOutput
	nil,                   // 10: test.patch.v1.Pv77Output.DefaultsEntry
	nil,                   // 11: test.patch.v1.Pv77FooOutput.DefaultsEntry
	nil,                   // 12: test.patch.v1.Pv77BarOutput.DefaultsEntry
	nil,                   // 13: test.patch.v1.Pv77BazOutput.DefaultsEntry
	nil,                   // 14: test.patch.v1.Pv77QuxOutput.DefaultsEntry
}
var file_test_patch_v1_pv77_proto_depIdxs = []int32{
	10, // 0: test.patch.v1.Pv77Output.defaults:type_name -> test.patch.v1.Pv77Output.DefaultsEntry
	11, // 1: test.patch.v1.Pv77FooOutput.defaults:type_name -> test.patch.v1.Pv77FooOutput.DefaultsEntry
	12, // 2: test.patch.v1.Pv77BarOutput.defaults:type_name -> test.patch.v1.Pv77BarOutput.DefaultsEntry
	13, // 3: test.patch.v1.Pv77BazOutput.defaults:type_name -> test.patch.v1.Pv77BazOutput.DefaultsEntry
	14, // 4: test.patch.v1.Pv77QuxOutput.defaults:type_name -> test.patch.v1.Pv77QuxOutput.DefaultsEntry
	2,  // 5: test.patch.v1.Pv77FooService.Pv77Foo:input_type -> test.patch.v1.Pv77FooInput
	4,  // 6: test.patch.v1.Pv77BarService.Pv77Bar:input_type -> test.patch.v1.Pv77BarInput
	6,  // 7: test.patch.v1.Pv77BazService.Pv77Baz:input_type -> test.patch.v1.Pv77BazInput
	8,  // 8: test.patch.v1.Pv77QuxService.Pv77Qux:input_type -> test.patch.v1.Pv77QuxInput
	3,  // 9: test.patch.v1.Pv77FooService.Pv77Foo:output_type -> test.patch.v1.Pv77FooOutput
	5,  // 10: test.patch.v1.Pv77BarService.Pv77Bar:output_type -> test.patch.v1.Pv77BarOutput
	7,  // 11: test.patch.v1.Pv77BazService.Pv77Baz:output_type -> test.patch.v1.Pv77BazOutput
	9,  // 12: test.patch.v1.Pv77QuxService.Pv77Qux:output_type -> test.patch.v1.Pv77QuxOutput
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_test_patch_v1_pv77_proto_init() }
func file_test_patch_v1_pv77_proto_init() {
	if File_test_patch_v1_pv77_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_patch_v1_pv77_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_patch_v1_pv77_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_patch_v1_pv77_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77FooInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_patch_v1_pv77_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77FooOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_patch_v1_pv77_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77BarInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_patch_v1_pv77_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77BarOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_patch_v1_pv77_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77BazInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_patch_v1_pv77_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77BazOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_patch_v1_pv77_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77QuxInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_patch_v1_pv77_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Pv77QuxOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_patch_v1_pv77_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_test_patch_v1_pv77_proto_goTypes,
		DependencyIndexes: file_test_patch_v1_pv77_proto_depIdxs,
		MessageInfos:      file_test_patch_v1_pv77_proto_msgTypes,
	}.Build()
	File_test_patch_v1_pv77_proto = out.File
	file_test_patch_v1_pv77_proto_rawDesc = nil
	file_test_patch_v1_pv77_proto_goTypes = nil
	file_test_patch_v1_pv77_proto_depIdxs = nil
}
