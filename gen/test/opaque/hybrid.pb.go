// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: test/opaque/hybrid.proto

//go:build !protoopaque

package opaque

import (
	_ "github.com/cludden/protoc-gen-go-temporal/gen/temporal/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HybridExample struct {
	state             protoimpl.MessageState `protogen:"hybrid.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Score             float64                `protobuf:"fixed64,2,opt,name=score" json:"score,omitempty"`
	Scores            []float64              `protobuf:"fixed64,3,rep,packed,name=scores" json:"scores,omitempty"`
	Ratio             float32                `protobuf:"fixed32,4,opt,name=ratio" json:"ratio,omitempty"`
	Ratios            []float32              `protobuf:"fixed32,5,rep,packed,name=ratios" json:"ratios,omitempty"`
	Age               int32                  `protobuf:"varint,6,opt,name=age" json:"age,omitempty"`
	Ages              []int32                `protobuf:"varint,7,rep,packed,name=ages" json:"ages,omitempty"`
	Id                int64                  `protobuf:"varint,8,opt,name=id" json:"id,omitempty"`
	Ids               []int64                `protobuf:"varint,9,rep,packed,name=ids" json:"ids,omitempty"`
	Emails            []string               `protobuf:"bytes,10,rep,name=emails" json:"emails,omitempty"`
	Extra             map[string]string      `protobuf:"bytes,11,rep,name=extra" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status            Status                 `protobuf:"varint,12,opt,name=status,enum=test.opaque.Status" json:"status,omitempty"`
	Statuses          []Status               `protobuf:"varint,13,rep,packed,name=statuses,enum=test.opaque.Status" json:"statuses,omitempty"`
	Size              uint32                 `protobuf:"varint,14,opt,name=size" json:"size,omitempty"`
	Sizes             []uint32               `protobuf:"varint,15,rep,packed,name=sizes" json:"sizes,omitempty"`
	Length            uint64                 `protobuf:"varint,16,opt,name=length" json:"length,omitempty"`
	Lengths           []uint64               `protobuf:"varint,17,rep,packed,name=lengths" json:"lengths,omitempty"`
	ConnectionId      int32                  `protobuf:"zigzag32,18,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	ConnectionIds     []int32                `protobuf:"zigzag32,19,rep,packed,name=connection_ids,json=connectionIds" json:"connection_ids,omitempty"`
	SessionId         int64                  `protobuf:"zigzag64,20,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	SessionIds        []int64                `protobuf:"zigzag64,21,rep,packed,name=session_ids,json=sessionIds" json:"session_ids,omitempty"`
	FixedSize         uint32                 `protobuf:"fixed32,22,opt,name=fixed_size,json=fixedSize" json:"fixed_size,omitempty"`
	FixedSizes        []uint32               `protobuf:"fixed32,23,rep,packed,name=fixed_sizes,json=fixedSizes" json:"fixed_sizes,omitempty"`
	FixedLength       uint64                 `protobuf:"fixed64,24,opt,name=fixed_length,json=fixedLength" json:"fixed_length,omitempty"`
	FixedLengths      []uint64               `protobuf:"fixed64,25,rep,packed,name=fixed_lengths,json=fixedLengths" json:"fixed_lengths,omitempty"`
	SfixedSize        int32                  `protobuf:"fixed32,26,opt,name=sfixed_size,json=sfixedSize" json:"sfixed_size,omitempty"`
	SfixedSizes       []int32                `protobuf:"fixed32,27,rep,packed,name=sfixed_sizes,json=sfixedSizes" json:"sfixed_sizes,omitempty"`
	SfixedLength      int64                  `protobuf:"fixed64,28,opt,name=sfixed_length,json=sfixedLength" json:"sfixed_length,omitempty"`
	SfixedLengths     []int64                `protobuf:"fixed64,29,rep,packed,name=sfixed_lengths,json=sfixedLengths" json:"sfixed_lengths,omitempty"`
	IsActive          bool                   `protobuf:"varint,30,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	IsActives         []bool                 `protobuf:"varint,31,rep,packed,name=is_actives,json=isActives" json:"is_actives,omitempty"`
	Data              []byte                 `protobuf:"bytes,32,opt,name=data" json:"data,omitempty"`
	Datas             [][]byte               `protobuf:"bytes,33,rep,name=datas" json:"datas,omitempty"`
	Address           *Address               `protobuf:"bytes,34,opt,name=address" json:"address,omitempty"`
	PreviousAddresses []*Address             `protobuf:"bytes,35,rep,name=previous_addresses,json=previousAddresses" json:"previous_addresses,omitempty"`
	// Types that are valid to be assigned to OneofField:
	//
	//	*HybridExample_OneofName
	//	*HybridExample_OneofScore
	//	*HybridExample_OneofRatio
	//	*HybridExample_OneofAge
	//	*HybridExample_OneofId
	//	*HybridExample_OneofStatus
	//	*HybridExample_OneofSize
	//	*HybridExample_OneofLength
	//	*HybridExample_OneofConnectionId
	//	*HybridExample_OneofSessionId
	//	*HybridExample_OneofFixedSize
	//	*HybridExample_OneofFixedLength
	//	*HybridExample_OneofSfixedSize
	//	*HybridExample_OneofSfixedLength
	//	*HybridExample_OneofIsActive
	//	*HybridExample_OneofData
	//	*HybridExample_OneofAddress
	OneofField    isHybridExample_OneofField `protobuf_oneof:"oneof_field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HybridExample) Reset() {
	*x = HybridExample{}
	mi := &file_test_opaque_hybrid_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HybridExample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HybridExample) ProtoMessage() {}

func (x *HybridExample) ProtoReflect() protoreflect.Message {
	mi := &file_test_opaque_hybrid_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HybridExample) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HybridExample) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *HybridExample) GetScores() []float64 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *HybridExample) GetRatio() float32 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *HybridExample) GetRatios() []float32 {
	if x != nil {
		return x.Ratios
	}
	return nil
}

func (x *HybridExample) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *HybridExample) GetAges() []int32 {
	if x != nil {
		return x.Ages
	}
	return nil
}

func (x *HybridExample) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HybridExample) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *HybridExample) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *HybridExample) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *HybridExample) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *HybridExample) GetStatuses() []Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *HybridExample) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *HybridExample) GetSizes() []uint32 {
	if x != nil {
		return x.Sizes
	}
	return nil
}

func (x *HybridExample) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *HybridExample) GetLengths() []uint64 {
	if x != nil {
		return x.Lengths
	}
	return nil
}

func (x *HybridExample) GetConnectionId() int32 {
	if x != nil {
		return x.ConnectionId
	}
	return 0
}

func (x *HybridExample) GetConnectionIds() []int32 {
	if x != nil {
		return x.ConnectionIds
	}
	return nil
}

func (x *HybridExample) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *HybridExample) GetSessionIds() []int64 {
	if x != nil {
		return x.SessionIds
	}
	return nil
}

func (x *HybridExample) GetFixedSize() uint32 {
	if x != nil {
		return x.FixedSize
	}
	return 0
}

func (x *HybridExample) GetFixedSizes() []uint32 {
	if x != nil {
		return x.FixedSizes
	}
	return nil
}

func (x *HybridExample) GetFixedLength() uint64 {
	if x != nil {
		return x.FixedLength
	}
	return 0
}

func (x *HybridExample) GetFixedLengths() []uint64 {
	if x != nil {
		return x.FixedLengths
	}
	return nil
}

func (x *HybridExample) GetSfixedSize() int32 {
	if x != nil {
		return x.SfixedSize
	}
	return 0
}

func (x *HybridExample) GetSfixedSizes() []int32 {
	if x != nil {
		return x.SfixedSizes
	}
	return nil
}

func (x *HybridExample) GetSfixedLength() int64 {
	if x != nil {
		return x.SfixedLength
	}
	return 0
}

func (x *HybridExample) GetSfixedLengths() []int64 {
	if x != nil {
		return x.SfixedLengths
	}
	return nil
}

func (x *HybridExample) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *HybridExample) GetIsActives() []bool {
	if x != nil {
		return x.IsActives
	}
	return nil
}

func (x *HybridExample) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HybridExample) GetDatas() [][]byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *HybridExample) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *HybridExample) GetPreviousAddresses() []*Address {
	if x != nil {
		return x.PreviousAddresses
	}
	return nil
}

func (x *HybridExample) GetOneofField() isHybridExample_OneofField {
	if x != nil {
		return x.OneofField
	}
	return nil
}

func (x *HybridExample) GetOneofName() string {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofName); ok {
			return x.OneofName
		}
	}
	return ""
}

func (x *HybridExample) GetOneofScore() float64 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofScore); ok {
			return x.OneofScore
		}
	}
	return 0
}

func (x *HybridExample) GetOneofRatio() float32 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofRatio); ok {
			return x.OneofRatio
		}
	}
	return 0
}

func (x *HybridExample) GetOneofAge() int32 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofAge); ok {
			return x.OneofAge
		}
	}
	return 0
}

func (x *HybridExample) GetOneofId() int64 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofId); ok {
			return x.OneofId
		}
	}
	return 0
}

func (x *HybridExample) GetOneofStatus() Status {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofStatus); ok {
			return x.OneofStatus
		}
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *HybridExample) GetOneofSize() uint32 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofSize); ok {
			return x.OneofSize
		}
	}
	return 0
}

func (x *HybridExample) GetOneofLength() uint64 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofLength); ok {
			return x.OneofLength
		}
	}
	return 0
}

func (x *HybridExample) GetOneofConnectionId() int32 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofConnectionId); ok {
			return x.OneofConnectionId
		}
	}
	return 0
}

func (x *HybridExample) GetOneofSessionId() int64 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofSessionId); ok {
			return x.OneofSessionId
		}
	}
	return 0
}

func (x *HybridExample) GetOneofFixedSize() uint32 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofFixedSize); ok {
			return x.OneofFixedSize
		}
	}
	return 0
}

func (x *HybridExample) GetOneofFixedLength() uint64 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofFixedLength); ok {
			return x.OneofFixedLength
		}
	}
	return 0
}

func (x *HybridExample) GetOneofSfixedSize() int32 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofSfixedSize); ok {
			return x.OneofSfixedSize
		}
	}
	return 0
}

func (x *HybridExample) GetOneofSfixedLength() int64 {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofSfixedLength); ok {
			return x.OneofSfixedLength
		}
	}
	return 0
}

func (x *HybridExample) GetOneofIsActive() bool {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofIsActive); ok {
			return x.OneofIsActive
		}
	}
	return false
}

func (x *HybridExample) GetOneofData() []byte {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofData); ok {
			return x.OneofData
		}
	}
	return nil
}

func (x *HybridExample) GetOneofAddress() *Address {
	if x != nil {
		if x, ok := x.OneofField.(*HybridExample_OneofAddress); ok {
			return x.OneofAddress
		}
	}
	return nil
}

func (x *HybridExample) SetName(v string) {
	x.Name = v
}

func (x *HybridExample) SetScore(v float64) {
	x.Score = v
}

func (x *HybridExample) SetScores(v []float64) {
	x.Scores = v
}

func (x *HybridExample) SetRatio(v float32) {
	x.Ratio = v
}

func (x *HybridExample) SetRatios(v []float32) {
	x.Ratios = v
}

func (x *HybridExample) SetAge(v int32) {
	x.Age = v
}

func (x *HybridExample) SetAges(v []int32) {
	x.Ages = v
}

func (x *HybridExample) SetId(v int64) {
	x.Id = v
}

func (x *HybridExample) SetIds(v []int64) {
	x.Ids = v
}

func (x *HybridExample) SetEmails(v []string) {
	x.Emails = v
}

func (x *HybridExample) SetExtra(v map[string]string) {
	x.Extra = v
}

func (x *HybridExample) SetStatus(v Status) {
	x.Status = v
}

func (x *HybridExample) SetStatuses(v []Status) {
	x.Statuses = v
}

func (x *HybridExample) SetSize(v uint32) {
	x.Size = v
}

func (x *HybridExample) SetSizes(v []uint32) {
	x.Sizes = v
}

func (x *HybridExample) SetLength(v uint64) {
	x.Length = v
}

func (x *HybridExample) SetLengths(v []uint64) {
	x.Lengths = v
}

func (x *HybridExample) SetConnectionId(v int32) {
	x.ConnectionId = v
}

func (x *HybridExample) SetConnectionIds(v []int32) {
	x.ConnectionIds = v
}

func (x *HybridExample) SetSessionId(v int64) {
	x.SessionId = v
}

func (x *HybridExample) SetSessionIds(v []int64) {
	x.SessionIds = v
}

func (x *HybridExample) SetFixedSize(v uint32) {
	x.FixedSize = v
}

func (x *HybridExample) SetFixedSizes(v []uint32) {
	x.FixedSizes = v
}

func (x *HybridExample) SetFixedLength(v uint64) {
	x.FixedLength = v
}

func (x *HybridExample) SetFixedLengths(v []uint64) {
	x.FixedLengths = v
}

func (x *HybridExample) SetSfixedSize(v int32) {
	x.SfixedSize = v
}

func (x *HybridExample) SetSfixedSizes(v []int32) {
	x.SfixedSizes = v
}

func (x *HybridExample) SetSfixedLength(v int64) {
	x.SfixedLength = v
}

func (x *HybridExample) SetSfixedLengths(v []int64) {
	x.SfixedLengths = v
}

func (x *HybridExample) SetIsActive(v bool) {
	x.IsActive = v
}

func (x *HybridExample) SetIsActives(v []bool) {
	x.IsActives = v
}

func (x *HybridExample) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.Data = v
}

func (x *HybridExample) SetDatas(v [][]byte) {
	x.Datas = v
}

func (x *HybridExample) SetAddress(v *Address) {
	x.Address = v
}

func (x *HybridExample) SetPreviousAddresses(v []*Address) {
	x.PreviousAddresses = v
}

func (x *HybridExample) SetOneofName(v string) {
	x.OneofField = &HybridExample_OneofName{v}
}

func (x *HybridExample) SetOneofScore(v float64) {
	x.OneofField = &HybridExample_OneofScore{v}
}

func (x *HybridExample) SetOneofRatio(v float32) {
	x.OneofField = &HybridExample_OneofRatio{v}
}

func (x *HybridExample) SetOneofAge(v int32) {
	x.OneofField = &HybridExample_OneofAge{v}
}

func (x *HybridExample) SetOneofId(v int64) {
	x.OneofField = &HybridExample_OneofId{v}
}

func (x *HybridExample) SetOneofStatus(v Status) {
	x.OneofField = &HybridExample_OneofStatus{v}
}

func (x *HybridExample) SetOneofSize(v uint32) {
	x.OneofField = &HybridExample_OneofSize{v}
}

func (x *HybridExample) SetOneofLength(v uint64) {
	x.OneofField = &HybridExample_OneofLength{v}
}

func (x *HybridExample) SetOneofConnectionId(v int32) {
	x.OneofField = &HybridExample_OneofConnectionId{v}
}

func (x *HybridExample) SetOneofSessionId(v int64) {
	x.OneofField = &HybridExample_OneofSessionId{v}
}

func (x *HybridExample) SetOneofFixedSize(v uint32) {
	x.OneofField = &HybridExample_OneofFixedSize{v}
}

func (x *HybridExample) SetOneofFixedLength(v uint64) {
	x.OneofField = &HybridExample_OneofFixedLength{v}
}

func (x *HybridExample) SetOneofSfixedSize(v int32) {
	x.OneofField = &HybridExample_OneofSfixedSize{v}
}

func (x *HybridExample) SetOneofSfixedLength(v int64) {
	x.OneofField = &HybridExample_OneofSfixedLength{v}
}

func (x *HybridExample) SetOneofIsActive(v bool) {
	x.OneofField = &HybridExample_OneofIsActive{v}
}

func (x *HybridExample) SetOneofData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.OneofField = &HybridExample_OneofData{v}
}

func (x *HybridExample) SetOneofAddress(v *Address) {
	if v == nil {
		x.OneofField = nil
		return
	}
	x.OneofField = &HybridExample_OneofAddress{v}
}

func (x *HybridExample) HasAddress() bool {
	if x == nil {
		return false
	}
	return x.Address != nil
}

func (x *HybridExample) HasOneofField() bool {
	if x == nil {
		return false
	}
	return x.OneofField != nil
}

func (x *HybridExample) HasOneofName() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofName)
	return ok
}

func (x *HybridExample) HasOneofScore() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofScore)
	return ok
}

func (x *HybridExample) HasOneofRatio() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofRatio)
	return ok
}

func (x *HybridExample) HasOneofAge() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofAge)
	return ok
}

func (x *HybridExample) HasOneofId() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofId)
	return ok
}

func (x *HybridExample) HasOneofStatus() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofStatus)
	return ok
}

func (x *HybridExample) HasOneofSize() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofSize)
	return ok
}

func (x *HybridExample) HasOneofLength() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofLength)
	return ok
}

func (x *HybridExample) HasOneofConnectionId() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofConnectionId)
	return ok
}

func (x *HybridExample) HasOneofSessionId() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofSessionId)
	return ok
}

func (x *HybridExample) HasOneofFixedSize() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofFixedSize)
	return ok
}

func (x *HybridExample) HasOneofFixedLength() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofFixedLength)
	return ok
}

func (x *HybridExample) HasOneofSfixedSize() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofSfixedSize)
	return ok
}

func (x *HybridExample) HasOneofSfixedLength() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofSfixedLength)
	return ok
}

func (x *HybridExample) HasOneofIsActive() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofIsActive)
	return ok
}

func (x *HybridExample) HasOneofData() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofData)
	return ok
}

func (x *HybridExample) HasOneofAddress() bool {
	if x == nil {
		return false
	}
	_, ok := x.OneofField.(*HybridExample_OneofAddress)
	return ok
}

func (x *HybridExample) ClearAddress() {
	x.Address = nil
}

func (x *HybridExample) ClearOneofField() {
	x.OneofField = nil
}

func (x *HybridExample) ClearOneofName() {
	if _, ok := x.OneofField.(*HybridExample_OneofName); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofScore() {
	if _, ok := x.OneofField.(*HybridExample_OneofScore); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofRatio() {
	if _, ok := x.OneofField.(*HybridExample_OneofRatio); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofAge() {
	if _, ok := x.OneofField.(*HybridExample_OneofAge); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofId() {
	if _, ok := x.OneofField.(*HybridExample_OneofId); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofStatus() {
	if _, ok := x.OneofField.(*HybridExample_OneofStatus); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofSize() {
	if _, ok := x.OneofField.(*HybridExample_OneofSize); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofLength() {
	if _, ok := x.OneofField.(*HybridExample_OneofLength); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofConnectionId() {
	if _, ok := x.OneofField.(*HybridExample_OneofConnectionId); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofSessionId() {
	if _, ok := x.OneofField.(*HybridExample_OneofSessionId); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofFixedSize() {
	if _, ok := x.OneofField.(*HybridExample_OneofFixedSize); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofFixedLength() {
	if _, ok := x.OneofField.(*HybridExample_OneofFixedLength); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofSfixedSize() {
	if _, ok := x.OneofField.(*HybridExample_OneofSfixedSize); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofSfixedLength() {
	if _, ok := x.OneofField.(*HybridExample_OneofSfixedLength); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofIsActive() {
	if _, ok := x.OneofField.(*HybridExample_OneofIsActive); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofData() {
	if _, ok := x.OneofField.(*HybridExample_OneofData); ok {
		x.OneofField = nil
	}
}

func (x *HybridExample) ClearOneofAddress() {
	if _, ok := x.OneofField.(*HybridExample_OneofAddress); ok {
		x.OneofField = nil
	}
}

const HybridExample_OneofField_not_set_case case_HybridExample_OneofField = 0
const HybridExample_OneofName_case case_HybridExample_OneofField = 36
const HybridExample_OneofScore_case case_HybridExample_OneofField = 37
const HybridExample_OneofRatio_case case_HybridExample_OneofField = 38
const HybridExample_OneofAge_case case_HybridExample_OneofField = 39
const HybridExample_OneofId_case case_HybridExample_OneofField = 40
const HybridExample_OneofStatus_case case_HybridExample_OneofField = 41
const HybridExample_OneofSize_case case_HybridExample_OneofField = 42
const HybridExample_OneofLength_case case_HybridExample_OneofField = 43
const HybridExample_OneofConnectionId_case case_HybridExample_OneofField = 44
const HybridExample_OneofSessionId_case case_HybridExample_OneofField = 45
const HybridExample_OneofFixedSize_case case_HybridExample_OneofField = 46
const HybridExample_OneofFixedLength_case case_HybridExample_OneofField = 47
const HybridExample_OneofSfixedSize_case case_HybridExample_OneofField = 48
const HybridExample_OneofSfixedLength_case case_HybridExample_OneofField = 49
const HybridExample_OneofIsActive_case case_HybridExample_OneofField = 50
const HybridExample_OneofData_case case_HybridExample_OneofField = 51
const HybridExample_OneofAddress_case case_HybridExample_OneofField = 52

func (x *HybridExample) WhichOneofField() case_HybridExample_OneofField {
	if x == nil {
		return HybridExample_OneofField_not_set_case
	}
	switch x.OneofField.(type) {
	case *HybridExample_OneofName:
		return HybridExample_OneofName_case
	case *HybridExample_OneofScore:
		return HybridExample_OneofScore_case
	case *HybridExample_OneofRatio:
		return HybridExample_OneofRatio_case
	case *HybridExample_OneofAge:
		return HybridExample_OneofAge_case
	case *HybridExample_OneofId:
		return HybridExample_OneofId_case
	case *HybridExample_OneofStatus:
		return HybridExample_OneofStatus_case
	case *HybridExample_OneofSize:
		return HybridExample_OneofSize_case
	case *HybridExample_OneofLength:
		return HybridExample_OneofLength_case
	case *HybridExample_OneofConnectionId:
		return HybridExample_OneofConnectionId_case
	case *HybridExample_OneofSessionId:
		return HybridExample_OneofSessionId_case
	case *HybridExample_OneofFixedSize:
		return HybridExample_OneofFixedSize_case
	case *HybridExample_OneofFixedLength:
		return HybridExample_OneofFixedLength_case
	case *HybridExample_OneofSfixedSize:
		return HybridExample_OneofSfixedSize_case
	case *HybridExample_OneofSfixedLength:
		return HybridExample_OneofSfixedLength_case
	case *HybridExample_OneofIsActive:
		return HybridExample_OneofIsActive_case
	case *HybridExample_OneofData:
		return HybridExample_OneofData_case
	case *HybridExample_OneofAddress:
		return HybridExample_OneofAddress_case
	default:
		return HybridExample_OneofField_not_set_case
	}
}

type HybridExample_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name              string
	Score             float64
	Scores            []float64
	Ratio             float32
	Ratios            []float32
	Age               int32
	Ages              []int32
	Id                int64
	Ids               []int64
	Emails            []string
	Extra             map[string]string
	Status            Status
	Statuses          []Status
	Size              uint32
	Sizes             []uint32
	Length            uint64
	Lengths           []uint64
	ConnectionId      int32
	ConnectionIds     []int32
	SessionId         int64
	SessionIds        []int64
	FixedSize         uint32
	FixedSizes        []uint32
	FixedLength       uint64
	FixedLengths      []uint64
	SfixedSize        int32
	SfixedSizes       []int32
	SfixedLength      int64
	SfixedLengths     []int64
	IsActive          bool
	IsActives         []bool
	Data              []byte
	Datas             [][]byte
	Address           *Address
	PreviousAddresses []*Address
	// Fields of oneof OneofField:
	OneofName         *string
	OneofScore        *float64
	OneofRatio        *float32
	OneofAge          *int32
	OneofId           *int64
	OneofStatus       *Status
	OneofSize         *uint32
	OneofLength       *uint64
	OneofConnectionId *int32
	OneofSessionId    *int64
	OneofFixedSize    *uint32
	OneofFixedLength  *uint64
	OneofSfixedSize   *int32
	OneofSfixedLength *int64
	OneofIsActive     *bool
	OneofData         []byte
	OneofAddress      *Address
	// -- end of OneofField
}

func (b0 HybridExample_builder) Build() *HybridExample {
	m0 := &HybridExample{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Score = b.Score
	x.Scores = b.Scores
	x.Ratio = b.Ratio
	x.Ratios = b.Ratios
	x.Age = b.Age
	x.Ages = b.Ages
	x.Id = b.Id
	x.Ids = b.Ids
	x.Emails = b.Emails
	x.Extra = b.Extra
	x.Status = b.Status
	x.Statuses = b.Statuses
	x.Size = b.Size
	x.Sizes = b.Sizes
	x.Length = b.Length
	x.Lengths = b.Lengths
	x.ConnectionId = b.ConnectionId
	x.ConnectionIds = b.ConnectionIds
	x.SessionId = b.SessionId
	x.SessionIds = b.SessionIds
	x.FixedSize = b.FixedSize
	x.FixedSizes = b.FixedSizes
	x.FixedLength = b.FixedLength
	x.FixedLengths = b.FixedLengths
	x.SfixedSize = b.SfixedSize
	x.SfixedSizes = b.SfixedSizes
	x.SfixedLength = b.SfixedLength
	x.SfixedLengths = b.SfixedLengths
	x.IsActive = b.IsActive
	x.IsActives = b.IsActives
	x.Data = b.Data
	x.Datas = b.Datas
	x.Address = b.Address
	x.PreviousAddresses = b.PreviousAddresses
	if b.OneofName != nil {
		x.OneofField = &HybridExample_OneofName{*b.OneofName}
	}
	if b.OneofScore != nil {
		x.OneofField = &HybridExample_OneofScore{*b.OneofScore}
	}
	if b.OneofRatio != nil {
		x.OneofField = &HybridExample_OneofRatio{*b.OneofRatio}
	}
	if b.OneofAge != nil {
		x.OneofField = &HybridExample_OneofAge{*b.OneofAge}
	}
	if b.OneofId != nil {
		x.OneofField = &HybridExample_OneofId{*b.OneofId}
	}
	if b.OneofStatus != nil {
		x.OneofField = &HybridExample_OneofStatus{*b.OneofStatus}
	}
	if b.OneofSize != nil {
		x.OneofField = &HybridExample_OneofSize{*b.OneofSize}
	}
	if b.OneofLength != nil {
		x.OneofField = &HybridExample_OneofLength{*b.OneofLength}
	}
	if b.OneofConnectionId != nil {
		x.OneofField = &HybridExample_OneofConnectionId{*b.OneofConnectionId}
	}
	if b.OneofSessionId != nil {
		x.OneofField = &HybridExample_OneofSessionId{*b.OneofSessionId}
	}
	if b.OneofFixedSize != nil {
		x.OneofField = &HybridExample_OneofFixedSize{*b.OneofFixedSize}
	}
	if b.OneofFixedLength != nil {
		x.OneofField = &HybridExample_OneofFixedLength{*b.OneofFixedLength}
	}
	if b.OneofSfixedSize != nil {
		x.OneofField = &HybridExample_OneofSfixedSize{*b.OneofSfixedSize}
	}
	if b.OneofSfixedLength != nil {
		x.OneofField = &HybridExample_OneofSfixedLength{*b.OneofSfixedLength}
	}
	if b.OneofIsActive != nil {
		x.OneofField = &HybridExample_OneofIsActive{*b.OneofIsActive}
	}
	if b.OneofData != nil {
		x.OneofField = &HybridExample_OneofData{b.OneofData}
	}
	if b.OneofAddress != nil {
		x.OneofField = &HybridExample_OneofAddress{b.OneofAddress}
	}
	return m0
}

type case_HybridExample_OneofField protoreflect.FieldNumber

func (x case_HybridExample_OneofField) String() string {
	md := file_test_opaque_hybrid_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isHybridExample_OneofField interface {
	isHybridExample_OneofField()
}

type HybridExample_OneofName struct {
	OneofName string `protobuf:"bytes,36,opt,name=oneof_name,json=oneofName,oneof"`
}

type HybridExample_OneofScore struct {
	OneofScore float64 `protobuf:"fixed64,37,opt,name=oneof_score,json=oneofScore,oneof"`
}

type HybridExample_OneofRatio struct {
	OneofRatio float32 `protobuf:"fixed32,38,opt,name=oneof_ratio,json=oneofRatio,oneof"`
}

type HybridExample_OneofAge struct {
	OneofAge int32 `protobuf:"varint,39,opt,name=oneof_age,json=oneofAge,oneof"`
}

type HybridExample_OneofId struct {
	OneofId int64 `protobuf:"varint,40,opt,name=oneof_id,json=oneofId,oneof"`
}

type HybridExample_OneofStatus struct {
	OneofStatus Status `protobuf:"varint,41,opt,name=oneof_status,json=oneofStatus,enum=test.opaque.Status,oneof"`
}

type HybridExample_OneofSize struct {
	OneofSize uint32 `protobuf:"varint,42,opt,name=oneof_size,json=oneofSize,oneof"`
}

type HybridExample_OneofLength struct {
	OneofLength uint64 `protobuf:"varint,43,opt,name=oneof_length,json=oneofLength,oneof"`
}

type HybridExample_OneofConnectionId struct {
	OneofConnectionId int32 `protobuf:"zigzag32,44,opt,name=oneof_connection_id,json=oneofConnectionId,oneof"`
}

type HybridExample_OneofSessionId struct {
	OneofSessionId int64 `protobuf:"zigzag64,45,opt,name=oneof_session_id,json=oneofSessionId,oneof"`
}

type HybridExample_OneofFixedSize struct {
	OneofFixedSize uint32 `protobuf:"fixed32,46,opt,name=oneof_fixed_size,json=oneofFixedSize,oneof"`
}

type HybridExample_OneofFixedLength struct {
	OneofFixedLength uint64 `protobuf:"fixed64,47,opt,name=oneof_fixed_length,json=oneofFixedLength,oneof"`
}

type HybridExample_OneofSfixedSize struct {
	OneofSfixedSize int32 `protobuf:"fixed32,48,opt,name=oneof_sfixed_size,json=oneofSfixedSize,oneof"`
}

type HybridExample_OneofSfixedLength struct {
	OneofSfixedLength int64 `protobuf:"fixed64,49,opt,name=oneof_sfixed_length,json=oneofSfixedLength,oneof"`
}

type HybridExample_OneofIsActive struct {
	OneofIsActive bool `protobuf:"varint,50,opt,name=oneof_is_active,json=oneofIsActive,oneof"`
}

type HybridExample_OneofData struct {
	OneofData []byte `protobuf:"bytes,51,opt,name=oneof_data,json=oneofData,oneof"`
}

type HybridExample_OneofAddress struct {
	OneofAddress *Address `protobuf:"bytes,52,opt,name=oneof_address,json=oneofAddress,oneof"`
}

func (*HybridExample_OneofName) isHybridExample_OneofField() {}

func (*HybridExample_OneofScore) isHybridExample_OneofField() {}

func (*HybridExample_OneofRatio) isHybridExample_OneofField() {}

func (*HybridExample_OneofAge) isHybridExample_OneofField() {}

func (*HybridExample_OneofId) isHybridExample_OneofField() {}

func (*HybridExample_OneofStatus) isHybridExample_OneofField() {}

func (*HybridExample_OneofSize) isHybridExample_OneofField() {}

func (*HybridExample_OneofLength) isHybridExample_OneofField() {}

func (*HybridExample_OneofConnectionId) isHybridExample_OneofField() {}

func (*HybridExample_OneofSessionId) isHybridExample_OneofField() {}

func (*HybridExample_OneofFixedSize) isHybridExample_OneofField() {}

func (*HybridExample_OneofFixedLength) isHybridExample_OneofField() {}

func (*HybridExample_OneofSfixedSize) isHybridExample_OneofField() {}

func (*HybridExample_OneofSfixedLength) isHybridExample_OneofField() {}

func (*HybridExample_OneofIsActive) isHybridExample_OneofField() {}

func (*HybridExample_OneofData) isHybridExample_OneofField() {}

func (*HybridExample_OneofAddress) isHybridExample_OneofField() {}

var File_test_opaque_hybrid_proto protoreflect.FileDescriptor

const file_test_opaque_hybrid_proto_rawDesc = "" +
	"\n" +
	"\x18test/opaque/hybrid.proto\x12\vtest.opaque\x1a\x1bgoogle/protobuf/empty.proto\x1a!google/protobuf/go_features.proto\x1a\x1atemporal/v1/temporal.proto\x1a\x18test/opaque/common.proto\"\xe3\x0e\n" +
	"\rHybridExample\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score\x12\x16\n" +
	"\x06scores\x18\x03 \x03(\x01R\x06scores\x12\x14\n" +
	"\x05ratio\x18\x04 \x01(\x02R\x05ratio\x12\x16\n" +
	"\x06ratios\x18\x05 \x03(\x02R\x06ratios\x12\x10\n" +
	"\x03age\x18\x06 \x01(\x05R\x03age\x12\x12\n" +
	"\x04ages\x18\a \x03(\x05R\x04ages\x12\x0e\n" +
	"\x02id\x18\b \x01(\x03R\x02id\x12\x10\n" +
	"\x03ids\x18\t \x03(\x03R\x03ids\x12\x16\n" +
	"\x06emails\x18\n" +
	" \x03(\tR\x06emails\x12;\n" +
	"\x05extra\x18\v \x03(\v2%.test.opaque.HybridExample.ExtraEntryR\x05extra\x12+\n" +
	"\x06status\x18\f \x01(\x0e2\x13.test.opaque.StatusR\x06status\x12/\n" +
	"\bstatuses\x18\r \x03(\x0e2\x13.test.opaque.StatusR\bstatuses\x12\x12\n" +
	"\x04size\x18\x0e \x01(\rR\x04size\x12\x14\n" +
	"\x05sizes\x18\x0f \x03(\rR\x05sizes\x12\x16\n" +
	"\x06length\x18\x10 \x01(\x04R\x06length\x12\x18\n" +
	"\alengths\x18\x11 \x03(\x04R\alengths\x12#\n" +
	"\rconnection_id\x18\x12 \x01(\x11R\fconnectionId\x12%\n" +
	"\x0econnection_ids\x18\x13 \x03(\x11R\rconnectionIds\x12\x1d\n" +
	"\n" +
	"session_id\x18\x14 \x01(\x12R\tsessionId\x12\x1f\n" +
	"\vsession_ids\x18\x15 \x03(\x12R\n" +
	"sessionIds\x12\x1d\n" +
	"\n" +
	"fixed_size\x18\x16 \x01(\aR\tfixedSize\x12\x1f\n" +
	"\vfixed_sizes\x18\x17 \x03(\aR\n" +
	"fixedSizes\x12!\n" +
	"\ffixed_length\x18\x18 \x01(\x06R\vfixedLength\x12#\n" +
	"\rfixed_lengths\x18\x19 \x03(\x06R\ffixedLengths\x12\x1f\n" +
	"\vsfixed_size\x18\x1a \x01(\x0fR\n" +
	"sfixedSize\x12!\n" +
	"\fsfixed_sizes\x18\x1b \x03(\x0fR\vsfixedSizes\x12#\n" +
	"\rsfixed_length\x18\x1c \x01(\x10R\fsfixedLength\x12%\n" +
	"\x0esfixed_lengths\x18\x1d \x03(\x10R\rsfixedLengths\x12\x1b\n" +
	"\tis_active\x18\x1e \x01(\bR\bisActive\x12\x1d\n" +
	"\n" +
	"is_actives\x18\x1f \x03(\bR\tisActives\x12\x12\n" +
	"\x04data\x18  \x01(\fR\x04data\x12\x14\n" +
	"\x05datas\x18! \x03(\fR\x05datas\x12.\n" +
	"\aaddress\x18\" \x01(\v2\x14.test.opaque.AddressR\aaddress\x12C\n" +
	"\x12previous_addresses\x18# \x03(\v2\x14.test.opaque.AddressR\x11previousAddresses\x12\x1f\n" +
	"\n" +
	"oneof_name\x18$ \x01(\tH\x00R\toneofName\x12!\n" +
	"\voneof_score\x18% \x01(\x01H\x00R\n" +
	"oneofScore\x12!\n" +
	"\voneof_ratio\x18& \x01(\x02H\x00R\n" +
	"oneofRatio\x12\x1d\n" +
	"\toneof_age\x18' \x01(\x05H\x00R\boneofAge\x12\x1b\n" +
	"\boneof_id\x18( \x01(\x03H\x00R\aoneofId\x128\n" +
	"\foneof_status\x18) \x01(\x0e2\x13.test.opaque.StatusH\x00R\voneofStatus\x12\x1f\n" +
	"\n" +
	"oneof_size\x18* \x01(\rH\x00R\toneofSize\x12#\n" +
	"\foneof_length\x18+ \x01(\x04H\x00R\voneofLength\x120\n" +
	"\x13oneof_connection_id\x18, \x01(\x11H\x00R\x11oneofConnectionId\x12*\n" +
	"\x10oneof_session_id\x18- \x01(\x12H\x00R\x0eoneofSessionId\x12*\n" +
	"\x10oneof_fixed_size\x18. \x01(\aH\x00R\x0eoneofFixedSize\x12.\n" +
	"\x12oneof_fixed_length\x18/ \x01(\x06H\x00R\x10oneofFixedLength\x12,\n" +
	"\x11oneof_sfixed_size\x180 \x01(\x0fH\x00R\x0foneofSfixedSize\x120\n" +
	"\x13oneof_sfixed_length\x181 \x01(\x10H\x00R\x11oneofSfixedLength\x12(\n" +
	"\x0foneof_is_active\x182 \x01(\bH\x00R\roneofIsActive\x12\x1f\n" +
	"\n" +
	"oneof_data\x183 \x01(\fH\x00R\toneofData\x12;\n" +
	"\roneof_address\x184 \x01(\v2\x14.test.opaque.AddressH\x00R\foneofAddress\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\r\n" +
	"\voneof_field2\xcb\x01\n" +
	"\x06Hybrid\x12b\n" +
	"\x10PutHybridExample\x12\x1a.test.opaque.HybridExample\x1a\x1a.test.opaque.HybridExample\"\x16\x8a\xc4\x03\x12\x12\x10\n" +
	"\fSignalHybrid\x10\x01\x12H\n" +
	"\fSignalHybrid\x12\x1a.test.opaque.HybridExample\x1a\x16.google.protobuf.Empty\"\x04\xa2\xc4\x03\x00\x1a\x13\x8a\xc4\x03\x0f\n" +
	"\ropaque-hybridB\xb0\x01\n" +
	"\x0fcom.test.opaqueB\vHybridProtoP\x01Z9github.com/cludden/protoc-gen-go-temporal/gen/test/opaque\xa2\x02\x03TOX\xaa\x02\vTest.Opaque\xca\x02\vTest\\Opaque\xe2\x02\x17Test\\Opaque\\GPBMetadata\xea\x02\fTest::Opaque\x92\x03\a\xd2>\x02\x10\x02\b\x02b\beditionsp\xe8\a"

var file_test_opaque_hybrid_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_test_opaque_hybrid_proto_goTypes = []any{
	(*HybridExample)(nil), // 0: test.opaque.HybridExample
	nil,                   // 1: test.opaque.HybridExample.ExtraEntry
	(Status)(0),           // 2: test.opaque.Status
	(*Address)(nil),       // 3: test.opaque.Address
	(*emptypb.Empty)(nil), // 4: google.protobuf.Empty
}
var file_test_opaque_hybrid_proto_depIdxs = []int32{
	1, // 0: test.opaque.HybridExample.extra:type_name -> test.opaque.HybridExample.ExtraEntry
	2, // 1: test.opaque.HybridExample.status:type_name -> test.opaque.Status
	2, // 2: test.opaque.HybridExample.statuses:type_name -> test.opaque.Status
	3, // 3: test.opaque.HybridExample.address:type_name -> test.opaque.Address
	3, // 4: test.opaque.HybridExample.previous_addresses:type_name -> test.opaque.Address
	2, // 5: test.opaque.HybridExample.oneof_status:type_name -> test.opaque.Status
	3, // 6: test.opaque.HybridExample.oneof_address:type_name -> test.opaque.Address
	0, // 7: test.opaque.Hybrid.PutHybridExample:input_type -> test.opaque.HybridExample
	0, // 8: test.opaque.Hybrid.SignalHybrid:input_type -> test.opaque.HybridExample
	0, // 9: test.opaque.Hybrid.PutHybridExample:output_type -> test.opaque.HybridExample
	4, // 10: test.opaque.Hybrid.SignalHybrid:output_type -> google.protobuf.Empty
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_test_opaque_hybrid_proto_init() }
func file_test_opaque_hybrid_proto_init() {
	if File_test_opaque_hybrid_proto != nil {
		return
	}
	file_test_opaque_common_proto_init()
	file_test_opaque_hybrid_proto_msgTypes[0].OneofWrappers = []any{
		(*HybridExample_OneofName)(nil),
		(*HybridExample_OneofScore)(nil),
		(*HybridExample_OneofRatio)(nil),
		(*HybridExample_OneofAge)(nil),
		(*HybridExample_OneofId)(nil),
		(*HybridExample_OneofStatus)(nil),
		(*HybridExample_OneofSize)(nil),
		(*HybridExample_OneofLength)(nil),
		(*HybridExample_OneofConnectionId)(nil),
		(*HybridExample_OneofSessionId)(nil),
		(*HybridExample_OneofFixedSize)(nil),
		(*HybridExample_OneofFixedLength)(nil),
		(*HybridExample_OneofSfixedSize)(nil),
		(*HybridExample_OneofSfixedLength)(nil),
		(*HybridExample_OneofIsActive)(nil),
		(*HybridExample_OneofData)(nil),
		(*HybridExample_OneofAddress)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_opaque_hybrid_proto_rawDesc), len(file_test_opaque_hybrid_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_test_opaque_hybrid_proto_goTypes,
		DependencyIndexes: file_test_opaque_hybrid_proto_depIdxs,
		MessageInfos:      file_test_opaque_hybrid_proto_msgTypes,
	}.Build()
	File_test_opaque_hybrid_proto = out.File
	file_test_opaque_hybrid_proto_goTypes = nil
	file_test_opaque_hybrid_proto_depIdxs = nil
}
