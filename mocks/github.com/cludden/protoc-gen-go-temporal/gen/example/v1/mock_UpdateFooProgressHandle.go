// Code generated by mockery v2.51.0. DO NOT EDIT.

package examplev1

import (
	context "context"

	examplev1 "github.com/cludden/protoc-gen-go-temporal/gen/example/v1"
	mock "github.com/stretchr/testify/mock"
)

// MockUpdateFooProgressHandle is an autogenerated mock type for the UpdateFooProgressHandle type
type MockUpdateFooProgressHandle struct {
	mock.Mock
}

type MockUpdateFooProgressHandle_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUpdateFooProgressHandle) EXPECT() *MockUpdateFooProgressHandle_Expecter {
	return &MockUpdateFooProgressHandle_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: ctx
func (_m *MockUpdateFooProgressHandle) Get(ctx context.Context) (*examplev1.GetFooProgressResponse, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 *examplev1.GetFooProgressResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (*examplev1.GetFooProgressResponse, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) *examplev1.GetFooProgressResponse); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*examplev1.GetFooProgressResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockUpdateFooProgressHandle_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type MockUpdateFooProgressHandle_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockUpdateFooProgressHandle_Expecter) Get(ctx interface{}) *MockUpdateFooProgressHandle_Get_Call {
	return &MockUpdateFooProgressHandle_Get_Call{Call: _e.mock.On("Get", ctx)}
}

func (_c *MockUpdateFooProgressHandle_Get_Call) Run(run func(ctx context.Context)) *MockUpdateFooProgressHandle_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockUpdateFooProgressHandle_Get_Call) Return(_a0 *examplev1.GetFooProgressResponse, _a1 error) *MockUpdateFooProgressHandle_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockUpdateFooProgressHandle_Get_Call) RunAndReturn(run func(context.Context) (*examplev1.GetFooProgressResponse, error)) *MockUpdateFooProgressHandle_Get_Call {
	_c.Call.Return(run)
	return _c
}

// RunID provides a mock function with no fields
func (_m *MockUpdateFooProgressHandle) RunID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RunID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockUpdateFooProgressHandle_RunID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RunID'
type MockUpdateFooProgressHandle_RunID_Call struct {
	*mock.Call
}

// RunID is a helper method to define mock.On call
func (_e *MockUpdateFooProgressHandle_Expecter) RunID() *MockUpdateFooProgressHandle_RunID_Call {
	return &MockUpdateFooProgressHandle_RunID_Call{Call: _e.mock.On("RunID")}
}

func (_c *MockUpdateFooProgressHandle_RunID_Call) Run(run func()) *MockUpdateFooProgressHandle_RunID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUpdateFooProgressHandle_RunID_Call) Return(_a0 string) *MockUpdateFooProgressHandle_RunID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockUpdateFooProgressHandle_RunID_Call) RunAndReturn(run func() string) *MockUpdateFooProgressHandle_RunID_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateID provides a mock function with no fields
func (_m *MockUpdateFooProgressHandle) UpdateID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for UpdateID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockUpdateFooProgressHandle_UpdateID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateID'
type MockUpdateFooProgressHandle_UpdateID_Call struct {
	*mock.Call
}

// UpdateID is a helper method to define mock.On call
func (_e *MockUpdateFooProgressHandle_Expecter) UpdateID() *MockUpdateFooProgressHandle_UpdateID_Call {
	return &MockUpdateFooProgressHandle_UpdateID_Call{Call: _e.mock.On("UpdateID")}
}

func (_c *MockUpdateFooProgressHandle_UpdateID_Call) Run(run func()) *MockUpdateFooProgressHandle_UpdateID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUpdateFooProgressHandle_UpdateID_Call) Return(_a0 string) *MockUpdateFooProgressHandle_UpdateID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockUpdateFooProgressHandle_UpdateID_Call) RunAndReturn(run func() string) *MockUpdateFooProgressHandle_UpdateID_Call {
	_c.Call.Return(run)
	return _c
}

// WorkflowID provides a mock function with no fields
func (_m *MockUpdateFooProgressHandle) WorkflowID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for WorkflowID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockUpdateFooProgressHandle_WorkflowID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WorkflowID'
type MockUpdateFooProgressHandle_WorkflowID_Call struct {
	*mock.Call
}

// WorkflowID is a helper method to define mock.On call
func (_e *MockUpdateFooProgressHandle_Expecter) WorkflowID() *MockUpdateFooProgressHandle_WorkflowID_Call {
	return &MockUpdateFooProgressHandle_WorkflowID_Call{Call: _e.mock.On("WorkflowID")}
}

func (_c *MockUpdateFooProgressHandle_WorkflowID_Call) Run(run func()) *MockUpdateFooProgressHandle_WorkflowID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUpdateFooProgressHandle_WorkflowID_Call) Return(_a0 string) *MockUpdateFooProgressHandle_WorkflowID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockUpdateFooProgressHandle_WorkflowID_Call) RunAndReturn(run func() string) *MockUpdateFooProgressHandle_WorkflowID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockUpdateFooProgressHandle creates a new instance of MockUpdateFooProgressHandle. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUpdateFooProgressHandle(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUpdateFooProgressHandle {
	mock := &MockUpdateFooProgressHandle{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
