syntax = "proto3";

package test.proto3optional;

import "temporal/v1/temporal.proto";

service FooService {
  option (temporal.v1.service) = {task_queue: "foo-queue"};

  rpc Foo(FooInput) returns (FooOutput) {
    option (temporal.v1.workflow) = {};
    option (temporal.v1.activity) = {
      start_to_close_timeout: {seconds: 2}
    };
  }
}

message FooInput {
  optional bytes optional_bytes = 1;
  optional bool optional_bool = 2;
  optional double optional_double = 3;
  optional fixed32 optional_fixed32 = 4;
  optional fixed64 optional_fixed64 = 5;
  optional float optional_float = 6;
  optional int32 optional_int32 = 7;
  optional int64 optional_int64 = 8;
  optional sfixed32 optional_sfixed32 = 9;
  optional sfixed64 optional_sfixed64 = 10;
  optional sint32 optional_sint32 = 11;
  optional sint64 optional_sint64 = 12;
  optional string optional_string = 13;
  optional uint32 optional_uint32 = 14;
  optional uint64 optional_uint64 = 15;
}

message FooNested {
  string foo = 1;
}

message FooOutput {
  optional string bar = 1;
}
